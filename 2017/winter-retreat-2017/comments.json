[
 {
  "id": 179819115,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10",
  "title": "Guide: Daniel Spiewak",
  "created_by": "djspiewak",
  "created_at": "9/28/2016",
  "body": "Hi, I'm Daniel Spiewak.  I… do a lot of Scala stuff.  I've been using Scala for almost exactly 10 years now, and have been on my FP journey for almost exactly as long.  Along the way I've worked in academia, learned a bunch of other random languages, pioneered algorithms and data structures, and acquired far more knowledge than I ever wanted on the topic of achieving performance on the JVM.\n\nIn more recent years, I've been strongly interested by the problem of building scalable abstractions.  In my view, an abstraction that imposes a serious performance cost (for some problem-specific definition of \"serious\") is not a useful abstraction.  Interesting, maybe, but not useful.  But at the same time, higher-order abstractions are incredibly helpful in structuring reasonable software for solving complex problems.  My interest is in having my cake and eating it too.  I'm never happier than when I'm writing incredibly messy, ugly, imperative code that supports a pure, lawful and safe abstraction with extremely high performance.\n\nIn less recent years, I've worked extensively in distributed systems at scale, parsing algorithms, compiler design, type theory, theory of computation, attribute grammars, distributed real-time optimistic concurrency, database design and implementation, stochastic modeling and optimization of video games, functional data structures, and even UI design and framework implementation.  I'm still interested in basically all of these things, I'm just not working on them as much of late.\n\nI'm happy to present on any of these topics, or other things that I've completely forgotten about.  Off the complete top of my head, some ideas that might be cool:\n- **Functional Concurrency**.  A deep dive into the `Task` monad's motivation and implementation, with a taste of all the amazing things we can build on top of this primitive.\n- **Parsing with Derivatives**.  Derivative parsing has had a (well deserved!) resurgence of interest lately, coinciding with the discovery that it is in fact O(n^3) with low constant factors, making it easily the simplest and most elegant practical generalized parsing algorithm.\n- **Ideal Functional Streaming**.  Describing a pie-in-the-sky ideal pure functional abstraction for performing streaming computation and modeling real-world distributed systems in a lawful and tractable fashion.\n\nOr, you know… other stuff.\n\n**Please post your suggestions for me below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/250375767",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-250375767",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 250375767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDM3NTc2Nw==",
    "user": {
     "login": "ShaneDelmore",
     "id": 4604933,
     "node_id": "MDQ6VXNlcjQ2MDQ5MzM=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/4604933?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ShaneDelmore",
     "html_url": "https://github.com/ShaneDelmore",
     "followers_url": "https://api.github.com/users/ShaneDelmore/followers",
     "following_url": "https://api.github.com/users/ShaneDelmore/following{/other_user}",
     "gists_url": "https://api.github.com/users/ShaneDelmore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ShaneDelmore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ShaneDelmore/subscriptions",
     "organizations_url": "https://api.github.com/users/ShaneDelmore/orgs",
     "repos_url": "https://api.github.com/users/ShaneDelmore/repos",
     "events_url": "https://api.github.com/users/ShaneDelmore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ShaneDelmore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/29/2016",
    "updated_at": "2016-09-29T05:47:06Z",
    "author_association": "NONE",
    "body": "Task, parsing, Emm, FS2, general good practices for code organization in FP apps for those coming from an OO background. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014301",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-254014301",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 254014301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDMwMQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:14:10Z",
    "author_association": "MEMBER",
    "body": "Ideal Functional Streaming or Parsing with Derivatives.\n\nOr ideally, both. That is, show the development of a simple (not production) streaming library which is then used to implement parsing with derivatives.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014315",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-254014315",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 254014315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDMxNQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:14:24Z",
    "author_association": "MEMBER",
    "body": "However I suspect Task might have broader appeal. 😄 \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254105653",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-254105653",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 254105653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNTY1Mw==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T03:37:02Z",
    "author_association": "NONE",
    "body": "Functional Concurrency or Ideal Functional Streaming :D\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/255655992",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-255655992",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 255655992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTY1NTk5Mg==",
    "user": {
     "login": "dcsobral",
     "id": 141079,
     "node_id": "MDQ6VXNlcjE0MTA3OQ==",
     "avatar_url": "https://avatars2.githubusercontent.com/u/141079?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/dcsobral",
     "html_url": "https://github.com/dcsobral",
     "followers_url": "https://api.github.com/users/dcsobral/followers",
     "following_url": "https://api.github.com/users/dcsobral/following{/other_user}",
     "gists_url": "https://api.github.com/users/dcsobral/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/dcsobral/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/dcsobral/subscriptions",
     "organizations_url": "https://api.github.com/users/dcsobral/orgs",
     "repos_url": "https://api.github.com/users/dcsobral/repos",
     "events_url": "https://api.github.com/users/dcsobral/events{/privacy}",
     "received_events_url": "https://api.github.com/users/dcsobral/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/24/2016",
    "updated_at": "2016-10-24T06:13:17Z",
    "author_association": "NONE",
    "body": "I'm a sucker for parsers, so sign me in for that! :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258037439",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-258037439",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 258037439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODAzNzQzOQ==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:13:05Z",
    "author_association": "NONE",
    "body": "Parsers would be awesome! I would definitely attend that.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269713045",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/10#issuecomment-269713045",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10",
    "id": 269713045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTcxMzA0NQ==",
    "user": {
     "login": "djspiewak",
     "id": 752,
     "node_id": "MDQ6VXNlcjc1Mg==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/djspiewak",
     "html_url": "https://github.com/djspiewak",
     "followers_url": "https://api.github.com/users/djspiewak/followers",
     "following_url": "https://api.github.com/users/djspiewak/following{/other_user}",
     "gists_url": "https://api.github.com/users/djspiewak/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/djspiewak/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/djspiewak/subscriptions",
     "organizations_url": "https://api.github.com/users/djspiewak/orgs",
     "repos_url": "https://api.github.com/users/djspiewak/repos",
     "events_url": "https://api.github.com/users/djspiewak/events{/privacy}",
     "received_events_url": "https://api.github.com/users/djspiewak/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/30/2016",
    "updated_at": "2016-12-30T00:05:13Z",
    "author_association": "NONE",
    "body": "## Primary: Functional Async on the JVM\r\n\r\nIn this talk, we will take a clean-slate approach to designing a reasonable abstraction for async and parallel functional programming in Scala.  We will examine some of the formal and informal foundations for such abstractions, and pay special attention to the unique and fundamental constraints imposed on us by the JVM.  We'll look at not only how to derive and implement this stuff ourselves, from scratch, for fun and profit, but also how our unicorn solution compares to the various solutions available in Scala today.\r\n\r\nBring a laptop!  If you enjoy following along as your \"speaker\" stumbles through live-coding and things that don't compile because he forgot punctuation, you're in for a treat.  Alternatively, that laptop works just as well as a means of distraction from the disaster you accidentally walked into.\r\n\r\n**Languages**: Scala, with a *touch* of Haskell and Scheme\r\n\r\n## Secondary: Fun with Parsing\r\n\r\nThis talk will take a step back and look at parsing as an abstract field.  We will walk through the conceptual weeds that lead us to various algorithms and implementations, ideas both good and bad, until we finally find ourselves rethinking things with an exciting new frontier algorithm: derivative parsing.  This talk is less about functional programming and more about \"cool algorithms and shiny fun problems\".\r\n\r\nWe're going to cover a lot of conceptual ground here.  If it works the way I hope, you should all come away with a pretty solid understanding of *every* parsing algorithm in existence.  If it doesn't work, uh… you may just come away very very confused through no fault of your own.  Which will it be?  Let's find out together!\r\n\r\n**Languages**: Whiteboard"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/10/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#10"
 },
 {
  "id": 174334367,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4",
  "title": "Guide: David Greenberg",
  "created_by": "dgrnbrg",
  "created_at": "8/31/2016",
  "body": "I'm David Greenberg, a functional and distributed systems programmer. My passions are data structures, concurrency, and distributed systems, and especially their intersection with functional programming concepts. I take a very relaxed approach to types: I equally enjoy Rust & Clojure, and wrote Clojure professionally for many years. I take a stochastic approach to progamming--I assume everything I write will have bugs, and so I like to think about how to use simulation & generative testing to make my software more robust (as opposed to encoding invariants in types).\n\nI've written a variety of functional libraries, including [a generatively test CRDT library](https://github.com/dgrnbrg/libdistsys), [an asynchronous HTTP server library](https://github.com/dgrnbrg/spiral), [an FPGA DSL for Clojure](https://github.com/dgrnbrg/piplin), and the book [Building Applications on Mesos](http://shop.oreilly.com/product/0636920039952.do).\n\nThere's two topics I'm most excited about talking about, but I need your help to fine-tune what we'll discuss:\n- **Hitchhiker Trees** - Hitchhiker trees are a purely functional and remote I/O optimized variation of fractal trees, which are themselves I/O optimized variations of B+ Trees. We have a [prototypical implementation](https://github.com/datacrypt-project/hitchhiker-tree/) that we could hack on, adding things like distributed GC or alternative indices. We could spend time discussing the various techniques used to make data structures functional, and the various techniques used to make functional data structures fast.\n- **Distributed functional programming** - Most functional programming currently exists on a single machine, and relies on garbage collection to ensure that functional data structures can remain efficient. How do we get the same advantages of functional programs when we scale up to dozens or hundreds of machines? We can discuss individual properties of functional programming and which things will work as we scale up. Some concepts we could investigate are monotonicity, idempotency, and multi-actor consistency considerations.\n\nIf you're interested in other aspects of concurrency, parallelism, and distribution, and their interaction with functional programming, so am I--let's spend the day learning!\n\n**If you have other ideas for what I should speak on at the Winter Retreat, please post them below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245150095",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-245150095",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 245150095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE1MDA5NQ==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:42:14Z",
    "author_association": "NONE",
    "body": "I'm really excited by the technologies you've mentioned, especially CRDTs. I'd be very excited about a discussion of \"Distributed FP.\" I have some experience with Clojure, and am interested in learning Rust. Did I mention I'm excited about a discussion of CRDTs?\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245319887",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-245319887",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 245319887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMxOTg4Nw==",
    "user": {
     "login": "haroldcarr",
     "id": 675370,
     "node_id": "MDQ6VXNlcjY3NTM3MA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/675370?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/haroldcarr",
     "html_url": "https://github.com/haroldcarr",
     "followers_url": "https://api.github.com/users/haroldcarr/followers",
     "following_url": "https://api.github.com/users/haroldcarr/following{/other_user}",
     "gists_url": "https://api.github.com/users/haroldcarr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/haroldcarr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/haroldcarr/subscriptions",
     "organizations_url": "https://api.github.com/users/haroldcarr/orgs",
     "repos_url": "https://api.github.com/users/haroldcarr/repos",
     "events_url": "https://api.github.com/users/haroldcarr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/haroldcarr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T15:33:33Z",
    "author_association": "MEMBER",
    "body": "+1 for Distributed Functional Programming\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014029",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-254014029",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 254014029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDAyOQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:08:11Z",
    "author_association": "MEMBER",
    "body": "👍 for distributed functional programming.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254104773",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-254104773",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 254104773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNDc3Mw==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T03:30:09Z",
    "author_association": "NONE",
    "body": "+1 for Distributed Functional Programming. But, would really love if you could talk about that by also taking examples from your book Building Applications on Mesos.  :+1: \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256137636",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-256137636",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 256137636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzNzYzNg==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:50:58Z",
    "author_association": "NONE",
    "body": "Cloud Haskell\nElixir\nHow the above compare to Clojure and Akka!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258040653",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-258040653",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 258040653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MDY1Mw==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:36:13Z",
    "author_association": "NONE",
    "body": "+1 for Distributed Functional Programming\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258155262",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-258155262",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 258155262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1NTI2Mg==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:19:33Z",
    "author_association": "NONE",
    "body": "+1 to Distributed Functional Programming\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259266548",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/4#issuecomment-259266548",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4",
    "id": 259266548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTI2NjU0OA==",
    "user": {
     "login": "dgrnbrg",
     "id": 618507,
     "node_id": "MDQ6VXNlcjYxODUwNw==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/618507?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/dgrnbrg",
     "html_url": "https://github.com/dgrnbrg",
     "followers_url": "https://api.github.com/users/dgrnbrg/followers",
     "following_url": "https://api.github.com/users/dgrnbrg/following{/other_user}",
     "gists_url": "https://api.github.com/users/dgrnbrg/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/dgrnbrg/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/dgrnbrg/subscriptions",
     "organizations_url": "https://api.github.com/users/dgrnbrg/orgs",
     "repos_url": "https://api.github.com/users/dgrnbrg/repos",
     "events_url": "https://api.github.com/users/dgrnbrg/events{/privacy}",
     "received_events_url": "https://api.github.com/users/dgrnbrg/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T21:33:55Z",
    "author_association": "NONE",
    "body": "Here we go! This is the planned session description:\n\nIf you’re coming to the retreat, you probably are interested in FP, if not already a full-blown user of FP and its techniques. Unfortunately, when it comes time to work on systems that scale beyond one machine, many techniques in functional programming no longer seem to be possible. For example, distributed garbage collection isn’t generally available, which makes it difficult to work with immutable data structures across multiple machines. Another issue is function composition—RPC semantics are difficult to get right, and the additional network latency incurred makes many FP design pattens unrealistic in distributed environments.\n\nIn this session, we’ll recast various ideas from FP to see their analogies in distributed systems. We will discuss how monotonic functions can offer many of the benefits of pure functions. We’ll look at dependencies and causality: ways our programs express the results of one computation being the input to the next computation, and performant techniques that achieve similar results in distributed systems. We’ll also analyze distributed functional data representations. By deconstructing the things we love most about FP, we’ll see how we can preserve their essence but make them work in distributed environments.\n\nYou should be familiar with pseudocode—we won’t be digging into specific languages with large amounts of code, but we will look at general ways to express these ideas. You should come eager to discuss, as we’ll learn best by sharing our thoughts and revelations as we break down FP concepts and see how they can be mapped into the distributed domain.\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/4/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#4"
 },
 {
  "id": 174637122,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8",
  "title": "Guide: Chris Allen",
  "created_by": "bitemyapp",
  "created_at": "9/1/2016",
  "body": "I'm Chris Allen, an author of Haskell Programming from First Principles, commonly known as the [haskell book](http://haskellbook.com). I'm an uneducated working programmer that got tired of unnecessary trade-offs between types and expressiveness.\r\n\r\nI originally started teaching so that I could spin up coworkers on Haskell, but found teaching itself to be more energizing than writing code.\r\n\r\nPast topics I've covered in some way include:\r\n- [lambda calculus, expressions, types, polymorphism, typeclasses, higher kinded types, functor/applicative/monad, foldable/traversable, reader, state, monad transformers, benchmarking and profiling, laziness, IO, and more](http://haskellbook.com)\r\n- [Yesod and Persistent in practice](https://www.youtube.com/watch?v=uYXX1t3GrsE) (I use these at work)\r\n- Rank N Types (I gave a talk on this at LC 16 and really enjoyed it)\r\n- [Instance-local functional dependencies](https://github.com/bitemyapp/buttress/blob/master/src/Buttress/Time.hs)\r\n- Practical applications of type families in Haskell (mono-traversable, Persistent, and stripe-haskell come to mind)\r\n\r\nTopics I don't have much practice teaching with but would be happy to explore with someone include:\r\n- Servant\r\n- GHCJS (e.g. https://github.com/bitemyapp/ghcjs-starter-project )\r\n- Parsing/tagging parts of speech (Such as with [Chatter](https://www.stackage.org/package/chatter))\r\n\r\nI am excited to be a guide at the LambdaConf Winter Retreat! I'm not stuck on anything in this list, so if you have requests, please tell me as soon as possible!\r\n\r\nEdit:\r\n\r\n### Final talk description\r\n\r\nHello everyone! I'm known primarily for the book [Haskell Programming from First Principles](http://haskellbook.com) and for some free Haskell tutorials and guides. The material of my presentation at the winter retreat will be based on my upcoming book named [Haskell Almanac](http://lorepub.com/product/cookbook). The content will be focused on intermediate topics which are commonly needed in industry software projects. Think \"web applications\", except I may not devote much actual time to a web framework, but rather, the peripheral dependencies of a Haskell web application.\r\n\r\nIt is safe to assume that you should have the basics of Haskell down to get the full value of this lesson! The first 2/3s or 3/4s of the [Haskell Book](http://haskellbook.com) is a good baseline for what you should know. Remember that merely reading the material isn't sufficient, you will need to have done the exercises. If you're already using Haskell productively and can sling things like monad transformers without too much comfort, you probably do not need the book although some advanced readers have enjoyed the insights it offers.\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245054830",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-245054830",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 245054830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA1NDgzMA==",
    "user": {
     "login": "bitemyapp",
     "id": 320177,
     "node_id": "MDQ6VXNlcjMyMDE3Nw==",
     "avatar_url": "https://avatars2.githubusercontent.com/u/320177?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bitemyapp",
     "html_url": "https://github.com/bitemyapp",
     "followers_url": "https://api.github.com/users/bitemyapp/followers",
     "following_url": "https://api.github.com/users/bitemyapp/following{/other_user}",
     "gists_url": "https://api.github.com/users/bitemyapp/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bitemyapp/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bitemyapp/subscriptions",
     "organizations_url": "https://api.github.com/users/bitemyapp/orgs",
     "repos_url": "https://api.github.com/users/bitemyapp/repos",
     "events_url": "https://api.github.com/users/bitemyapp/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bitemyapp/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/6/2016",
    "updated_at": "2016-09-06T19:01:56Z",
    "author_association": "NONE",
    "body": "Requests so far have been:\n- Web apps\n- streaming libraries (machines, conduit, pipes)\n- event sourcing\n- `Data.ByteString.Lazy` and `Builder`\n- `monad-control`\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245148217",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-245148217",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 245148217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0ODIxNw==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:29:48Z",
    "author_association": "NONE",
    "body": "I'd also be interested in learning about building web apps. Doing so with Yesod and Persistent, or GHCJS sounds fun!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245278795",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-245278795",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 245278795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI3ODc5NQ==",
    "user": {
     "login": "rabbitonweb",
     "id": 6287558,
     "node_id": "MDQ6VXNlcjYyODc1NTg=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/6287558?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rabbitonweb",
     "html_url": "https://github.com/rabbitonweb",
     "followers_url": "https://api.github.com/users/rabbitonweb/followers",
     "following_url": "https://api.github.com/users/rabbitonweb/following{/other_user}",
     "gists_url": "https://api.github.com/users/rabbitonweb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rabbitonweb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rabbitonweb/subscriptions",
     "organizations_url": "https://api.github.com/users/rabbitonweb/orgs",
     "repos_url": "https://api.github.com/users/rabbitonweb/repos",
     "events_url": "https://api.github.com/users/rabbitonweb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rabbitonweb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T13:23:46Z",
    "author_association": "NONE",
    "body": "Yeah, Chris :) !! For me you can talk about anything, I'm all ears :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245319252",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-245319252",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 245319252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMxOTI1Mg==",
    "user": {
     "login": "haroldcarr",
     "id": 675370,
     "node_id": "MDQ6VXNlcjY3NTM3MA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/675370?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/haroldcarr",
     "html_url": "https://github.com/haroldcarr",
     "followers_url": "https://api.github.com/users/haroldcarr/followers",
     "following_url": "https://api.github.com/users/haroldcarr/following{/other_user}",
     "gists_url": "https://api.github.com/users/haroldcarr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/haroldcarr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/haroldcarr/subscriptions",
     "organizations_url": "https://api.github.com/users/haroldcarr/orgs",
     "repos_url": "https://api.github.com/users/haroldcarr/repos",
     "events_url": "https://api.github.com/users/haroldcarr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/haroldcarr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T15:31:34Z",
    "author_association": "MEMBER",
    "body": "Interested in (in listed order):\n- Practical applications of type families in Haskell\n- Rank N Types\n- Instance-local functional dependencies\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245675098",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-245675098",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 245675098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTY3NTA5OA==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/8/2016",
    "updated_at": "2016-09-08T17:30:37Z",
    "author_association": "MEMBER",
    "body": "My vote: Workshop on using both type families and functional dependencies, and showing how different scenarios benefit from either.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/247581269",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-247581269",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 247581269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU4MTI2OQ==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/16/2016",
    "updated_at": "2016-09-16T11:48:12Z",
    "author_association": "MEMBER",
    "body": "+1 to @jdegoes \nI would love hearing about the interplay of type classes, open and closed type and data families, associated types, functional dependencies and injectivity annotations. They all look similar, but each of them is tricky in its own way.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254106713",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-254106713",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 254106713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNjcxMw==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T03:48:56Z",
    "author_association": "NONE",
    "body": "web apps with event sourcing would be great\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256136734",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-256136734",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 256136734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzNjczNA==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:48:15Z",
    "author_association": "NONE",
    "body": "GHCjs, and functional front-end in general\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258039296",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-258039296",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 258039296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODAzOTI5Ng==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:26:00Z",
    "author_association": "NONE",
    "body": "+1 to @haroldcarr \n\nI second his vote.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258153523",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-258153523",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 258153523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1MzUyMw==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:33:47Z",
    "author_association": "NONE",
    "body": "+1 to lambda calculus, expressions, types, polymorphism, typeclasses, higher kinded types, functor/applicative/monad, foldable/traversable, reader, state, monad transformers, benchmarking and profiling, laziness, IO, and more\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258301813",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-258301813",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 258301813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODMwMTgxMw==",
    "user": {
     "login": "bitemyapp",
     "id": 320177,
     "node_id": "MDQ6VXNlcjMyMDE3Nw==",
     "avatar_url": "https://avatars2.githubusercontent.com/u/320177?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bitemyapp",
     "html_url": "https://github.com/bitemyapp",
     "followers_url": "https://api.github.com/users/bitemyapp/followers",
     "following_url": "https://api.github.com/users/bitemyapp/following{/other_user}",
     "gists_url": "https://api.github.com/users/bitemyapp/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bitemyapp/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bitemyapp/subscriptions",
     "organizations_url": "https://api.github.com/users/bitemyapp/orgs",
     "repos_url": "https://api.github.com/users/bitemyapp/repos",
     "events_url": "https://api.github.com/users/bitemyapp/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bitemyapp/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T23:13:25Z",
    "author_association": "NONE",
    "body": "For anyone wanting rank n types: https://www.youtube.com/watch?v=k0cZe0LVFI4\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258436305",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-258436305",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 258436305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODQzNjMwNQ==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/4/2016",
    "updated_at": "2016-11-04T13:51:38Z",
    "author_association": "NONE",
    "body": "@bitemyapp Do you have the slides/code from the talk above? The screen isn't that observable in the video\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258507186",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-258507186",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 258507186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODUwNzE4Ng==",
    "user": {
     "login": "bitemyapp",
     "id": 320177,
     "node_id": "MDQ6VXNlcjMyMDE3Nw==",
     "avatar_url": "https://avatars2.githubusercontent.com/u/320177?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bitemyapp",
     "html_url": "https://github.com/bitemyapp",
     "followers_url": "https://api.github.com/users/bitemyapp/followers",
     "following_url": "https://api.github.com/users/bitemyapp/following{/other_user}",
     "gists_url": "https://api.github.com/users/bitemyapp/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bitemyapp/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bitemyapp/subscriptions",
     "organizations_url": "https://api.github.com/users/bitemyapp/orgs",
     "repos_url": "https://api.github.com/users/bitemyapp/repos",
     "events_url": "https://api.github.com/users/bitemyapp/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bitemyapp/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/4/2016",
    "updated_at": "2016-11-04T18:10:52Z",
    "author_association": "NONE",
    "body": "@emptyslot \n\nhttps://github.com/bitemyapp/presentations/blob/master/rank_n_types_talk/rankn.pdf\n\nhttps://github.com/bitemyapp/presentations/blob/master/rank_n_types_talk/tuple.hs\n\nhttps://github.com/bitemyapp/presentations/blob/master/rank_n_types_talk/ranks.hs\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259227879",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-259227879",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 259227879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIyNzg3OQ==",
    "user": {
     "login": "gilligan",
     "id": 27668,
     "node_id": "MDQ6VXNlcjI3NjY4",
     "avatar_url": "https://avatars3.githubusercontent.com/u/27668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/gilligan",
     "html_url": "https://github.com/gilligan",
     "followers_url": "https://api.github.com/users/gilligan/followers",
     "following_url": "https://api.github.com/users/gilligan/following{/other_user}",
     "gists_url": "https://api.github.com/users/gilligan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/gilligan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/gilligan/subscriptions",
     "organizations_url": "https://api.github.com/users/gilligan/orgs",
     "repos_url": "https://api.github.com/users/gilligan/repos",
     "events_url": "https://api.github.com/users/gilligan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/gilligan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T19:03:29Z",
    "author_association": "NONE",
    "body": "> Servant\n\nPersonally I would be very interested in developing some small servant project. I would possibly consider the fact that you don't know Servant that well as a bonus because that way I could see how you explore new Haskell libraries/frameworks.\n\nSo developing a small servant app ideally with some tiny frontend part would be great for me. Maybe not thrilling as some of the fancy topics mentioned here but anyway.. ;)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264694212",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/8#issuecomment-264694212",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8",
    "id": 264694212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5NDIxMg==",
    "user": {
     "login": "alexi21",
     "id": 17229174,
     "node_id": "MDQ6VXNlcjE3MjI5MTc0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/17229174?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/alexi21",
     "html_url": "https://github.com/alexi21",
     "followers_url": "https://api.github.com/users/alexi21/followers",
     "following_url": "https://api.github.com/users/alexi21/following{/other_user}",
     "gists_url": "https://api.github.com/users/alexi21/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/alexi21/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/alexi21/subscriptions",
     "organizations_url": "https://api.github.com/users/alexi21/orgs",
     "repos_url": "https://api.github.com/users/alexi21/repos",
     "events_url": "https://api.github.com/users/alexi21/events{/privacy}",
     "received_events_url": "https://api.github.com/users/alexi21/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/4/2016",
    "updated_at": "2016-12-04T09:51:36Z",
    "author_association": "NONE",
    "body": "My work is all web applications so anything relating to that would be great."
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/8/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#8"
 },
 {
  "id": 179388415,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9",
  "title": "Guide: TJ Usiyan",
  "created_by": "griotspeak",
  "created_at": "9/27/2016",
  "body": "I'm TJ Usiyan, iOS instructor at The Iron Yard and frequent speaker on the topics of Swift, iOS, functional programming, math, music, and how all or some of those things can be juxtaposed into something delightful. I have a liberal arts background and have an unconventional CS background.\r\n\r\nI have been teaching one thing (music,  math) or another (programming), for over ten years. \r\n\r\nPast topics I've covered in some way include (mostly in Swift):\r\n\r\nParser Combinators, Types and API design, DSLs, Generics, Protocols, Monads, Language, Symbolic Music Representation: Notation & Theory, Symbolic Calculus, Functional Reactive Programming, Polymorphic Temporal Media, Operator overloading, , Translating Haskell through meditation.\r\n\r\nI would love to talk more about any of these topics but exploring new DSLs, Sane and sanitary Operator Overloading, Polyphonic temporal media, Generics, or protocols would be especially wonderful, I think. \r\n\r\n I'm excited to be a guide and hope we can craft beautiful language together this winter. None of this is set in stone. I invite suggestions and requests! Vote using thumbs up and thumbs down emojis and we'll figure this all out together!\r\n\r\n\r\n## Functional Programming and Polymorphism basics in Swift\r\nSwift allows us to apply many techniques from functional programming but, at the end of the day, Swift is not meant to be a functional programming language. This point can make it tricky to learn and apply functional programming principles using the language. One approach is to eschew FP concepts altogether when using Swift. It doesn’t take much time to realize that this is not the correct approach. Use of closures as first class types, `map` and `filter`are all completely at home in Swift. Clearly, there are some concepts which work well in Swift. \r\n\r\nIn this session, we’ll introduce fundamental functional programming concepts using swift, explain and explore the ways in which Swift is not meant to adhere to these, and try to define some basic guidelines for successfully using FP ideas in Swift. Attendees should have the latest Xcode installed, should understand what variables and types are in a general sense, and should be able to type quickly (more quickly than ‘hunt and peck’). \r\n\r\n\r\n## Building a small Parser Combinator library in Swift\r\nThere are so many ways to parse text and so many of them obscure what it is we are trying to do overall. Parser combinators, at their best, allow us to write programs that closely resemble the grammar we are interested in. Swift, with its expressive type system and closures, provides us the tools to create our own parser combinator library. \r\n\r\nIn this session, attendees will write a small parser combinator library. We’ll discuss the various choices one can make in building a library and the effects that those choices can have on the resulting API. Attendees should have a working understanding of Swift, Generics, and Closures. Basic knowledge of FP concepts will help but are not strictly required. Attendees should have the latest Xcode installed and should be able to type quickly (more quickly than ‘hunt and peck’). ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014245",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-254014245",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 254014245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDI0NQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:13:03Z",
    "author_association": "MEMBER",
    "body": "I'd vote for DSLs in Swift, especially comparing what is and is not possible in Swift and how standard techniques in Haskell or other FP languages have to be adapted for Swift's type system & semantics.\n\nBut that's just me, hopefully someone else votes for something. 😄 \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254019282",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-254019282",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 254019282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxOTI4Mg==",
    "user": {
     "login": "ShaneDelmore",
     "id": 4604933,
     "node_id": "MDQ6VXNlcjQ2MDQ5MzM=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/4604933?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ShaneDelmore",
     "html_url": "https://github.com/ShaneDelmore",
     "followers_url": "https://api.github.com/users/ShaneDelmore/followers",
     "following_url": "https://api.github.com/users/ShaneDelmore/following{/other_user}",
     "gists_url": "https://api.github.com/users/ShaneDelmore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ShaneDelmore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ShaneDelmore/subscriptions",
     "organizations_url": "https://api.github.com/users/ShaneDelmore/orgs",
     "repos_url": "https://api.github.com/users/ShaneDelmore/repos",
     "events_url": "https://api.github.com/users/ShaneDelmore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ShaneDelmore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/16/2016",
    "updated_at": "2016-10-16T00:17:58Z",
    "author_association": "NONE",
    "body": "Protocols sounds fun\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/255613993",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-255613993",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 255613993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxMzk5Mw==",
    "user": {
     "login": "hirad",
     "id": 1005340,
     "node_id": "MDQ6VXNlcjEwMDUzNDA=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1005340?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hirad",
     "html_url": "https://github.com/hirad",
     "followers_url": "https://api.github.com/users/hirad/followers",
     "following_url": "https://api.github.com/users/hirad/following{/other_user}",
     "gists_url": "https://api.github.com/users/hirad/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hirad/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hirad/subscriptions",
     "organizations_url": "https://api.github.com/users/hirad/orgs",
     "repos_url": "https://api.github.com/users/hirad/repos",
     "events_url": "https://api.github.com/users/hirad/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hirad/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/23/2016",
    "updated_at": "2016-10-23T20:58:51Z",
    "author_association": "NONE",
    "body": "I use Swift daily but I'm new to FP. I'd love to hear about Parser Combinators, Generics (still don't take advantage of them enough), and Monads.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258038525",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-258038525",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 258038525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODAzODUyNQ==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:20:27Z",
    "author_association": "NONE",
    "body": "Out of curiosity what would the topic \"Translating Haskell through meditation\" consist of? \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258585128",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-258585128",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 258585128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU4NTEyOA==",
    "user": {
     "login": "ghost",
     "id": 10137,
     "node_id": "MDQ6VXNlcjEwMTM3",
     "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ghost",
     "html_url": "https://github.com/ghost",
     "followers_url": "https://api.github.com/users/ghost/followers",
     "following_url": "https://api.github.com/users/ghost/following{/other_user}",
     "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
     "organizations_url": "https://api.github.com/users/ghost/orgs",
     "repos_url": "https://api.github.com/users/ghost/repos",
     "events_url": "https://api.github.com/users/ghost/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ghost/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/5/2016",
    "updated_at": "2016-11-05T02:21:14Z",
    "author_association": "NONE",
    "body": "TJ I'm interested in using a couple Clojure platforms to ask what kinds of musical decisions can be automated. I need to practice basics of coding though (I wasn't a very accomplished developer in any language before I started on Clojure). More generally though, I hope we find time to talk about the relations between typing, FP, and music! \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/260021434",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-260021434",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 260021434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDAyMTQzNA==",
    "user": {
     "login": "Kent-White",
     "id": 19931667,
     "node_id": "MDQ6VXNlcjE5OTMxNjY3",
     "avatar_url": "https://avatars0.githubusercontent.com/u/19931667?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Kent-White",
     "html_url": "https://github.com/Kent-White",
     "followers_url": "https://api.github.com/users/Kent-White/followers",
     "following_url": "https://api.github.com/users/Kent-White/following{/other_user}",
     "gists_url": "https://api.github.com/users/Kent-White/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Kent-White/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Kent-White/subscriptions",
     "organizations_url": "https://api.github.com/users/Kent-White/orgs",
     "repos_url": "https://api.github.com/users/Kent-White/repos",
     "events_url": "https://api.github.com/users/Kent-White/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Kent-White/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/11/2016",
    "updated_at": "2016-11-11T18:21:58Z",
    "author_association": "NONE",
    "body": "Translating Haskell through meditation sounds cool. Any functional programming  in swift would also be cool and bring more variety.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264694168",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-264694168",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 264694168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5NDE2OA==",
    "user": {
     "login": "alexi21",
     "id": 17229174,
     "node_id": "MDQ6VXNlcjE3MjI5MTc0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/17229174?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/alexi21",
     "html_url": "https://github.com/alexi21",
     "followers_url": "https://api.github.com/users/alexi21/followers",
     "following_url": "https://api.github.com/users/alexi21/following{/other_user}",
     "gists_url": "https://api.github.com/users/alexi21/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/alexi21/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/alexi21/subscriptions",
     "organizations_url": "https://api.github.com/users/alexi21/orgs",
     "repos_url": "https://api.github.com/users/alexi21/repos",
     "events_url": "https://api.github.com/users/alexi21/events{/privacy}",
     "received_events_url": "https://api.github.com/users/alexi21/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/4/2016",
    "updated_at": "2016-12-04T09:50:15Z",
    "author_association": "NONE",
    "body": "I would be interested in functional approaches to programming in Swift. Cheers"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269542783",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/9#issuecomment-269542783",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9",
    "id": 269542783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU0Mjc4Mw==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/28/2016",
    "updated_at": "2016-12-28T21:22:00Z",
    "author_association": "NONE",
    "body": "Super excited for the parser combinator workshop! "
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/9/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#9"
 },
 {
  "id": 174332080,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3",
  "title": "Guide: Julie Moronuki",
  "created_by": "argumatronic",
  "created_at": "8/31/2016",
  "body": "Hi, I'm Julie Moronuki, an author of [Haskell Programming from First Principles](http://haskellbook.com/). I have a background in linguistics and philosophy, including logic, and have been a teacher of all levels for nearly 20 years. My mission has always been to make difficult concepts, whether in German philosophy or X-bar syntax, comprehensible to everyone who wants to learn. I am excited to be a guide for the Winter Retreat this year.\n\nI am relatively new to programming, but I came to love Haskell because of the type system and typeclasses and the pervasive monoids.  My developing interests are centered around natural language processing using typed lambda calculus. \n\nMy first commitment is, and will remain, teaching. To that end, I am working on several projects to improve the documentation-and-examples situation around Haskell, as well as to make some of the underlying concepts of Haskell more accessible.\n\nI have already had some inquiries about Haskell lessons for relative beginners at the Winter Retreat, something I'd be happy to do. Those lessons could be on foundational concepts (\"how do we get from monoids to monads?\") or \"how do I make a (fill in the blank) in Haskell?\" But I could also plan a workshop on computational semantics! \n\nIn other words, I'm here to serve you. What do you want to learn and how can I help you get there?\n\n**Please post your suggestions for me below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245147871",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-245147871",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 245147871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0Nzg3MQ==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:27:31Z",
    "author_association": "NONE",
    "body": "I am a beginner Haskell programmer who has read through several books, and am about a third of the way through the Haskell Book. I am attempting to develop an intuition for working with typed languages, but it's slow going for me. Any Haskell sessions focused on teaching would be helpful for me. Also, if sufficiently geared toward beginners, there would be interest from at least one person learning to program.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014013",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-254014013",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 254014013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDAxMw==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:07:41Z",
    "author_association": "MEMBER",
    "body": "My wife who is going through HaskellBook will also be in attendance, but doesn't have a Github account. She'd be interested in Haskell beginner-friendly content. \n\nMyself, I'd lean more toward NLP using lambda calculus. But I'm most definitely not representative of attendees so don't consider that. :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254112165",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-254112165",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 254112165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExMjE2NQ==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T04:52:05Z",
    "author_association": "NONE",
    "body": "Haskell for beginners sound great. How about building small ecommerce web in Haskell? \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/255613728",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-255613728",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 255613728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxMzcyOA==",
    "user": {
     "login": "hirad",
     "id": 1005340,
     "node_id": "MDQ6VXNlcjEwMDUzNDA=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1005340?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hirad",
     "html_url": "https://github.com/hirad",
     "followers_url": "https://api.github.com/users/hirad/followers",
     "following_url": "https://api.github.com/users/hirad/following{/other_user}",
     "gists_url": "https://api.github.com/users/hirad/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hirad/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hirad/subscriptions",
     "organizations_url": "https://api.github.com/users/hirad/orgs",
     "repos_url": "https://api.github.com/users/hirad/repos",
     "events_url": "https://api.github.com/users/hirad/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hirad/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/23/2016",
    "updated_at": "2016-10-23T20:55:10Z",
    "author_association": "NONE",
    "body": "I've worked my way through Learn You a Haskell, but I've stumbled in practice. Would love to learn a better way to practice my Haskell-fu to a point where I can actually use it. In other words, lessons for relative beginners sound great!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256138531",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-256138531",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 256138531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzODUzMQ==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:52:55Z",
    "author_association": "NONE",
    "body": "Suggested libraries for real-world backend use and related discussions.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258040777",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-258040777",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 258040777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MDc3Nw==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:37:09Z",
    "author_association": "NONE",
    "body": "NLP using lambda calculus would be awesome!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258156582",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-258156582",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 258156582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1NjU4Mg==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:24:13Z",
    "author_association": "NONE",
    "body": "I'd love to learn more foundational concepts of haskell\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258584589",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-258584589",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 258584589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU4NDU4OQ==",
    "user": {
     "login": "ghost",
     "id": 10137,
     "node_id": "MDQ6VXNlcjEwMTM3",
     "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ghost",
     "html_url": "https://github.com/ghost",
     "followers_url": "https://api.github.com/users/ghost/followers",
     "following_url": "https://api.github.com/users/ghost/following{/other_user}",
     "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
     "organizations_url": "https://api.github.com/users/ghost/orgs",
     "repos_url": "https://api.github.com/users/ghost/repos",
     "events_url": "https://api.github.com/users/ghost/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ghost/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/5/2016",
    "updated_at": "2016-11-05T02:09:05Z",
    "author_association": "NONE",
    "body": "Would Lambda NLP be demonstrated in a particular language or strictly theory? very interested in it! but not sure what my engagement w Haskell will be over the retreat. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259234284",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-259234284",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 259234284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIzNDI4NA==",
    "user": {
     "login": "gilligan",
     "id": 27668,
     "node_id": "MDQ6VXNlcjI3NjY4",
     "avatar_url": "https://avatars3.githubusercontent.com/u/27668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/gilligan",
     "html_url": "https://github.com/gilligan",
     "followers_url": "https://api.github.com/users/gilligan/followers",
     "following_url": "https://api.github.com/users/gilligan/following{/other_user}",
     "gists_url": "https://api.github.com/users/gilligan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/gilligan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/gilligan/subscriptions",
     "organizations_url": "https://api.github.com/users/gilligan/orgs",
     "repos_url": "https://api.github.com/users/gilligan/repos",
     "events_url": "https://api.github.com/users/gilligan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/gilligan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T19:27:31Z",
    "author_association": "NONE",
    "body": "I would basically enjoy any kind of workshop for developing some non-trivial project.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259376614",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-259376614",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 259376614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTM3NjYxNA==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/9/2016",
    "updated_at": "2016-11-09T10:03:27Z",
    "author_association": "NONE",
    "body": "@soth-ing that's a good question. it would have depended on what people wanted, but based on people's responses here and via other media, i'm probably not going to do that as a workshop. so maybe we can talk about that during some of the non-workshop time. :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264694087",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-264694087",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 264694087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5NDA4Nw==",
    "user": {
     "login": "alexi21",
     "id": 17229174,
     "node_id": "MDQ6VXNlcjE3MjI5MTc0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/17229174?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/alexi21",
     "html_url": "https://github.com/alexi21",
     "followers_url": "https://api.github.com/users/alexi21/followers",
     "following_url": "https://api.github.com/users/alexi21/following{/other_user}",
     "gists_url": "https://api.github.com/users/alexi21/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/alexi21/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/alexi21/subscriptions",
     "organizations_url": "https://api.github.com/users/alexi21/orgs",
     "repos_url": "https://api.github.com/users/alexi21/repos",
     "events_url": "https://api.github.com/users/alexi21/events{/privacy}",
     "received_events_url": "https://api.github.com/users/alexi21/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/4/2016",
    "updated_at": "2016-12-04T09:48:20Z",
    "author_association": "NONE",
    "body": "Hi there, I am a Haskell beginner and have been coding in Javascript using Ramda, RX, and other functional patterns for about six months. I have a PhD in philosophy (including German Idealism) and would be interested to hear about how you have used your background to inform your approach to programming. Cheers, Alex"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264756174",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-264756174",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 264756174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc1NjE3NA==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/5/2016",
    "updated_at": "2016-12-05T02:45:59Z",
    "author_association": "NONE",
    "body": "# Applicative and Monadic Parsing (Two Hours)\r\n\r\nThe `Applicative` and `Monad` typeclasses allow for function application in the presence of some structure. They are similar in some respects, but they have important differences, differences that are not always well understood. In practice, many people end up using `Monad` in places where `Applicative` might be more suitable.\r\n\r\nIt's a difference that is perhaps best learned by doing, by using them in real code and comparing what can be done in applicative contexts that cannot be done in monadic contexts, and vice versa. One fun way to do this is through parsing.\r\n\r\nWe will begin this workshop with a very brief overview of the two typeclasses and a short introduction to parsing in general. We will use two Haskell parsing libraries, `optparse-applicative` and (probably) `trifecta`, as we explore the practical differences between applicative and monadic contexts. Finally, we will build a small application using `optparse-applicative`.  \r\n\r\nThe workshop will be aimed at people who can read some Haskell syntax and are familiar with the concepts of `Applicative` and `Monad`, but might not have much experience using them in practical applications. You do not need to already understand parsing to attend, and you do not need to have ever built a whole project in Haskell. By the end of this workshop, you will have! \r\n\r\n- What language? All code will be in Haskell.   \r\n- Who is this for?  People who want to understand `Applicative` and `Monad`. People who want to learn more about parser combinators. People who have never built an entire application in Haskell before and want to know how to get started doing that. The second hour or so will be focused on a project that uses the parsing libraries we've been exploring and may be of interest even to people who have written programs in Haskell before but have never used `optparse-applicative`.\r\n- Level: Somewhere on the border of [Fire Lubline](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf) and [Ice Skrig](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf).\r\n\r\n\r\n@jdegoes "
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264756556",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/3#issuecomment-264756556",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3",
    "id": 264756556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc1NjU1Ng==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/5/2016",
    "updated_at": "2016-12-05T02:49:24Z",
    "author_association": "NONE",
    "body": "@alexi21 This is something I would *really* love to talk about, but I'm not sure how much more interest there would be in such a talk. I'd be happy to either talk with you about it individually or perhaps do an impromptu short talk if there are other people interested. "
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/3/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#3"
 },
 {
  "id": 174372494,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5",
  "title": "Guide: Scott Fleischman",
  "created_by": "scott-fleischman",
  "created_at": "8/31/2016",
  "body": "Hi! I’m Scott Fleischman. I gave the [Agda from Nothing](https://github.com/scott-fleischman/agda-from-nothing) workshop and the [Types for Ancient Greek](https://github.com/scott-fleischman/greek-grammar) talk at LambdaConf 2016. I love logic, programming and mathematics. These three topics come together marvelously well in type theory, and [Agda](http://wiki.portal.chalmers.se/agda/pmwiki.php) is my favorite language in that domain.\n\nIn the comments below are three of my ideas for topics that we could explore during the Winter Retreat.\n\n**If you have ideas for what I should speak on at the Winter Retreat, please post them below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243893997",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-243893997",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 243893997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg5Mzk5Nw==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T20:41:32Z",
    "author_association": "NONE",
    "body": "1. Learn [Agda](http://wiki.portal.chalmers.se/agda/pmwiki.php) from nothing. I will adjust the material and exercises from my [LambdaConf 2016 workshop](https://github.com/scott-fleischman/agda-from-nothing) to meet your needs and interests. For example:  \n   A. Work through the basics of Adga—what is a dependent type, how can we encode invariants in data structures, propositions as types, etc.  \n   B. Write dependently-typed programs (that you can run!) using the Haskell FFI. This would require some Haskell knowledge.  \n   C. Do proofs from the [Software Foundations](https://www.cis.upenn.edu/~bcpierce/sf/current/index.html) book or similar. See how Agda compares to Coq.  \n   D. Something else—you decide!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243894427",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-243894427",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 243894427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg5NDQyNw==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T20:47:03Z",
    "author_association": "NONE",
    "body": "2) Take an in-depth look at the paper [“How to Keep Your Neighbours in Order”](https://personal.cis.strath.ac.uk/conor.mcbride/Pivotal.pdf) by Conor McBride. Here is the abstract.\n\n> I present a datatype-generic treatment of recursive container types whose elements are guaranteed to be stored in increasing order, with the ordering invariant rolled out systematically. Intervals, lists and binary search trees are instances of the generic treatment. On the journey to this treatment, I report a variety of failed experiments and the transferable learning experiences they triggered. I demonstrate that a total element ordering is enough to deliver insertion and flattening algorithms, and show that (with care about the formulation of the types) the implementations remain as usual. Agda’s instance arguments and pattern synonyms maximize the proof search done by the typechecker and minimize the appearance of proofs in program text, often eradicating them entirely. Generalizing to indexed recursive container types, invariants such as size and balance can be expressed in addition to ordering. By way of example, I implement insertion and deletion for 2-3 trees, ensuring both order and balance by the discipline of type checking.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243894754",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-243894754",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 243894754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg5NDc1NA==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T20:42:50Z",
    "author_association": "NONE",
    "body": "3) Explore the concept of ornaments by looking at Conor McBride’s paper [“Ornamental Algebras, Algebraic Ornaments”](http://plv.mpi-sws.org/plerg/papers/mcbride-ornaments.pdf) and Yorick Sijsling’s 2016 thesis [“Generic programming with ornaments and dependent types”](http://sijsling.com/msc-thesis.html). Here is the abstract from McBride’s paper.\n\n> This paper re-examines the presentation of datatypes in dependently typed languages, addressing in particular the issue of what it means for one datatype to be in various ways more informative than another. Informal human observations like ‘lists are natural numbers with extra decoration’ and ‘vectors are lists indexed by length’ are expressed in a first class language of ornaments — presentations of fancy new types based on plain old ones—encompassing both decoration and, in the sense of Tim Freeman and Frank Pfenning (1991), refinement.\n> \n> Each ornament adds information, so it comes with a forgetful function from fancy data back to plain, expressible as the fold of its ornamental algebra: lists built from numbers acquire the ‘length’ algebra. Conversely, each algebra for a datatype induces a way to index it—an algebraic ornament. The length algebra for lists induces the construction of the paradigmatic dependent vector types.\n> \n> Dependent types thus provide not only a new ‘axis of diversity’—indexing—for data structures, but also new abstractions to manage and exploit that diversity. In the spirit of ‘the new programming’ (McBride & McKinna, 2004), the engineering of coincidence is replaced by the propagation of consequence.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243894822",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-243894822",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 243894822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg5NDgyMg==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T20:43:07Z",
    "author_association": "NONE",
    "body": "4) You decide! Post your ideas below.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243920124",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-243920124",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 243920124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzkyMDEyNA==",
    "user": {
     "login": "rabbitonweb",
     "id": 6287558,
     "node_id": "MDQ6VXNlcjYyODc1NTg=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/6287558?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rabbitonweb",
     "html_url": "https://github.com/rabbitonweb",
     "followers_url": "https://api.github.com/users/rabbitonweb/followers",
     "following_url": "https://api.github.com/users/rabbitonweb/following{/other_user}",
     "gists_url": "https://api.github.com/users/rabbitonweb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rabbitonweb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rabbitonweb/subscriptions",
     "organizations_url": "https://api.github.com/users/rabbitonweb/orgs",
     "repos_url": "https://api.github.com/users/rabbitonweb/repos",
     "events_url": "https://api.github.com/users/rabbitonweb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rabbitonweb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T22:18:27Z",
    "author_association": "NONE",
    "body": "I just want to say that you Agda talk/workshop was awesome! \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244190469",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-244190469",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 244190469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE5MDQ2OQ==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/1/2016",
    "updated_at": "2016-09-01T19:45:39Z",
    "author_association": "NONE",
    "body": "I'd go through the Agda one again. I was at your Agda workshop at LambdaConf but I don't use emacs so I got a bit lost. :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244197999",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-244197999",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 244197999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE5Nzk5OQ==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/1/2016",
    "updated_at": "2016-09-01T20:13:57Z",
    "author_association": "NONE",
    "body": "@GinBaby Ok sounds great, thanks! Is there anything from the material you would like to see more of? What kinds of Agda programs you would like to explore?\n\nAlso, I only use Emacs for Agda. I don't really know much about the editor other than the Agda mode keyboard shortcuts. :) With [Aquamacs](http://aquamacs.org/), I don't even have to know how to open or save a file—I just use the menus. There are alternatives to Emacs, but they generally don't have the quite the same in-Agda experience with all of the goodies.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244205524",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-244205524",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 244205524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDIwNTUyNA==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/1/2016",
    "updated_at": "2016-09-01T20:41:07Z",
    "author_association": "NONE",
    "body": "@scott-fleischman Oh, people warned me before I went that it would involve a lot of Emacs, and I tried to keep up with the Atom Agda mode, but it's not the same. But no worries, still got plenty out of it.\n\nI have an obvious interest in learning more about the Haskell FFI, but I'd love to work through proofs and compare Agda and Coq. I will learn some Emacs before the retreat -- this will be great motivation! \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245149784",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-245149784",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 245149784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0OTc4NA==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:40:13Z",
    "author_association": "NONE",
    "body": "Very excited about a \"Learn Agda from nothing\" workshop. I have only just done intro tutorials in Coq (if that's at all related).\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258040566",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-258040566",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 258040566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MDU2Ng==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:35:40Z",
    "author_association": "NONE",
    "body": "I am voting for  \"Learn Agda from nothing\"\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258154493",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-258154493",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 258154493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1NDQ5Mw==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:16:45Z",
    "author_association": "NONE",
    "body": "Agda from nothing, because I know nothing!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259230748",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-259230748",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 259230748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIzMDc0OA==",
    "user": {
     "login": "gilligan",
     "id": 27668,
     "node_id": "MDQ6VXNlcjI3NjY4",
     "avatar_url": "https://avatars3.githubusercontent.com/u/27668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/gilligan",
     "html_url": "https://github.com/gilligan",
     "followers_url": "https://api.github.com/users/gilligan/followers",
     "following_url": "https://api.github.com/users/gilligan/following{/other_user}",
     "gists_url": "https://api.github.com/users/gilligan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/gilligan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/gilligan/subscriptions",
     "organizations_url": "https://api.github.com/users/gilligan/orgs",
     "repos_url": "https://api.github.com/users/gilligan/repos",
     "events_url": "https://api.github.com/users/gilligan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/gilligan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T19:14:07Z",
    "author_association": "NONE",
    "body": "Agda from nothing! :) It's not like there wasn't still a ton of time for me to spend on learning more Haskell but Agda is indeed intriguing.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259810026",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-259810026",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 259810026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgxMDAyNg==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/10/2016",
    "updated_at": "2016-11-10T21:17:29Z",
    "author_association": "NONE",
    "body": "Everyone seems interested in learning Agda from nothing, so I’d like to propose one final vote for my workshop(s) for the winter retreat.\n\nDo you want:\n1) Breadth-first Agda from Nothing\n2) Depth-first Agda from Nothing\n\nFor 1) Breadth-first Agda from Nothing, we would cover several flavors of Agda programs—from the point of view of mathematics, logic and programming. To begin with we would cover basic data types and syntax. We’ll start with boolean functions to get our feet wet and learn our way around Agda and Emacs. From there we would move toward equality and basic natural number theorems. After we’re comfortable with the idea of a proof in Agda, we’ll look at some simple theorems in constructive logic. Finally since Agda a programming language after all, we’ll look at basic data structures and what functional programming looks like in Agda. We’ll touch on FFI with Haskell and actually run a simple Agda program! Time permitting, we will conclude by looking at a binary search tree that is correctly ordered by construction.\n\nFor 2) Depth-first Agda from Nothing, we will focus on the idea of data structures with an intrinsic ordering invariant ¹. First, to get used to Agda we will explore basic types for natural numbers, lists and trees, working toward implementing a binary search tree. We will then try a couple different ways of making the binary search tree correct-by-construction with regard to its ordering invariant. Once we have achieved our goal of creating one ordered container structure, we will make it systematic by creating a universe of all ordered container structures. Within this universe we will see what lists, trees, and our binary search tree looks like. Time permitting, we will conclude by implementing a tree with node invariants such as balanced 2-3 trees in our universe. This approach highlights a strength of Agda—embedding DSLs and reasoning about them. \n\n¹. This follows the outline of Conor McBride’s paper How to Keep Your Neighbors in Order.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259883011",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-259883011",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 259883011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTg4MzAxMQ==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/11/2016",
    "updated_at": "2016-11-11T05:15:32Z",
    "author_association": "NONE",
    "body": "I'll vote for \"2) Depth-first\", but will be happy either way.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264694370",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-264694370",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 264694370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5NDM3MA==",
    "user": {
     "login": "alexi21",
     "id": 17229174,
     "node_id": "MDQ6VXNlcjE3MjI5MTc0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/17229174?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/alexi21",
     "html_url": "https://github.com/alexi21",
     "followers_url": "https://api.github.com/users/alexi21/followers",
     "following_url": "https://api.github.com/users/alexi21/following{/other_user}",
     "gists_url": "https://api.github.com/users/alexi21/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/alexi21/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/alexi21/subscriptions",
     "organizations_url": "https://api.github.com/users/alexi21/orgs",
     "repos_url": "https://api.github.com/users/alexi21/repos",
     "events_url": "https://api.github.com/users/alexi21/events{/privacy}",
     "received_events_url": "https://api.github.com/users/alexi21/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/4/2016",
    "updated_at": "2016-12-04T09:55:08Z",
    "author_association": "NONE",
    "body": "Can I add a vote for 2) as well, thanks"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264950529",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/5#issuecomment-264950529",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5",
    "id": 264950529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDk1MDUyOQ==",
    "user": {
     "login": "scott-fleischman",
     "id": 5268284,
     "node_id": "MDQ6VXNlcjUyNjgyODQ=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/5268284?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/scott-fleischman",
     "html_url": "https://github.com/scott-fleischman",
     "followers_url": "https://api.github.com/users/scott-fleischman/followers",
     "following_url": "https://api.github.com/users/scott-fleischman/following{/other_user}",
     "gists_url": "https://api.github.com/users/scott-fleischman/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/scott-fleischman/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/scott-fleischman/subscriptions",
     "organizations_url": "https://api.github.com/users/scott-fleischman/orgs",
     "repos_url": "https://api.github.com/users/scott-fleischman/repos",
     "events_url": "https://api.github.com/users/scott-fleischman/events{/privacy}",
     "received_events_url": "https://api.github.com/users/scott-fleischman/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/5/2016",
    "updated_at": "2016-12-05T19:32:02Z",
    "author_association": "NONE",
    "body": "# Agda from Nothing: Order in the Types\r\nIn this two-hour workshop we will learn Agda from first principles with a focus on ordered data structures. To get used to Agda we will explore basic types for natural numbers, lists and trees, working toward implementing a binary search tree. We will then try a couple different ways of making the binary search tree correct-by-construction with regard to its ordering invariant. Once we have achieved our goal of creating one ordered container structure, we will make it systematic by creating a universe of all ordered container structures. Within this universe we will see what lists, trees, and our binary search tree looks like.\r\n\r\nThere are minimal prerequisites for this workshop—familiarity with curried functions is perhaps the starting point. The concepts build on one another throughout the talk. The expected takeaway for the first two-thirds is a working experience with binary search trees in a dependently-typed setting. The final third of the workshop ramps up quickly in abstract concepts so the expectation shifts more to _exposure_ to the concepts rather than a detailed understanding of them. The workshop follows the outline of Conor McBride’s paper _How to Keep Your Neighbours in Order_ (2014) [[pdf]](https://personal.cis.strath.ac.uk/conor.mcbride/Pivotal.pdf). The Agda code from the paper is reworked for the needs of the workshop, in particular making the proofs explicit. There will be a mixture of live coding and slides.\r\n\r\nThe key goals for the workshop are to come away with:\r\n\r\n1. A working knowledge of the basics of Agda\r\n2. Experience encoding an invariant in a dependently-typed data structure\r\n3. An sense of the advantages of using _prescriptive_ types over _descriptive_ ones\r\n4. Exposure to the concepts of an Agda program of non-trivial size and complexity\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/5/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#5"
 },
 {
  "id": 174448527,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6",
  "title": "Guide: Pawel Szulc",
  "created_by": "rabbitonweb",
  "created_at": "9/1/2016",
  "body": "Hi, I'm Pawel Szulc. At the moment, I am a Scala developer and humble apprentice of functional programming. \n\nI've been exposed to the functional paradigm pretty late in life, after 8 years of working as a software developer. Three years ago, I was introduced to the basic concepts of functional programming, and it was a life changing experience &mdash; both humbling and refreshing. It's really funny how your ego totally melts when you realize how much you still don't know! At the same time, you are injected with an enormous amount of adrenaline, knowing that you just entered a vast new world that you can explore.\n\nFor the past 2.5 years, I've been polishing my craft, learning theory whenever and wherever I could. I was fortunate to speak at some well-known FP conferences, including LambdaConf and LambdaDays. You might have heard my talks \"Monads - asking the right question\", \"Real World Gobbledygook\", \"Having a Cake and Eating It Too - Introduction to Typeclasses,\" and recently, \"The Cats Toolbox: A Quick Tour of Basic Typeclasses\".\n\nLearning theory and writing code for toy projects is great, but until recently, I was always missing the bigger picture. I had questions like, \"How does the paradigm works in a larger project?\", \"What are the corner cases?\", \"Where does FP hit the bottom?\". A few months ago, I was lucky to be hired at SlamData, where all my answers were answered. I'm blessed with the ability to work with some of the best developers I've ever met on a 100% pure functional programming project.\n\nFor me, functional programming was never about switching paradigms just to switch. It was always about sanity. Yes, SANITY. The ability to finally do _real_ engineering (to some extent). A safe space where you can reason about your code in isolation. Where modularity actually makes sense. Because software engineering is hard - whatever paradigm or approach you are going to choose for your next project, the complexity will not magically disappear. FP allows you to tackle the complexity in a divide-and-conquer manner. I believe that we live in era of \"software alchemy\" [(c) Martin Thomson], and functional programming is the first real step to bring science and true engineering to our industry.\n\nAt the same time, I remember how \"hard\" seemed at first. FP isn't really _hard_. It's just _different_. Coming from a different background (e.g C-like language), you have to learn a lot. And being a professional software developer, you are not really accustomed to situations where it takes more then a day to comprehend a concept, right? :) But as I said, it does not mean that FP is hard, it's just different. To put it into perspective, ask any Haskell developer who switched to Scala, how hard it was to comprehend a concept of a 'method' for her. A method! A simple concept, right? But totally different for somebody coming from Haskell.\n\nWhich brings me finally to my role as guide during Lambdaconf Winter Retreat 2017. What really motivates me right now is:\n1. Spreading the love of FP - teaching newcomers, filling the gap, helping people dive into the world of FP. You want to know how to finally start your journey with ScalaZ or Cats? I'm here for you. Wondering what all the fuss is about Free monad? I'm happy to engage in a conversation. Want to go bananas and explore concept of recursion schemes (which I'm still exploring at the moment)? Lets do it!\n2. Discussing FP as an instrument to bring sanity to our industry, leaving the era of \"software alchemy\" behind.\n\nMy friends know I can talk about code for hours. It's just how I roll! Please feel free to chat me at any time during the event. My idea of a successful event is one where I had a chance to chat with literally _everybody_!\n\n**Please post your suggestions for me below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243991281",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-243991281",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 243991281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk5MTI4MQ==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/1/2016",
    "updated_at": "2016-09-01T06:49:34Z",
    "author_association": "NONE",
    "body": "Oh my gosh, I'm so excited to see you again! \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244492872",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-244492872",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 244492872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ5Mjg3Mg==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/2/2016",
    "updated_at": "2016-09-02T21:34:45Z",
    "author_association": "MEMBER",
    "body": "I would love to hear about how Scala is different from using Haskell or any other FP.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245149396",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-245149396",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 245149396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0OTM5Ng==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:37:28Z",
    "author_association": "NONE",
    "body": "I'm all for a discussion of \"FP as an instrument to bring sanity...\"\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/248568714",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-248568714",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 248568714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU2ODcxNA==",
    "user": {
     "login": "rabbitonweb",
     "id": 6287558,
     "node_id": "MDQ6VXNlcjYyODc1NTg=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/6287558?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rabbitonweb",
     "html_url": "https://github.com/rabbitonweb",
     "followers_url": "https://api.github.com/users/rabbitonweb/followers",
     "following_url": "https://api.github.com/users/rabbitonweb/following{/other_user}",
     "gists_url": "https://api.github.com/users/rabbitonweb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rabbitonweb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rabbitonweb/subscriptions",
     "organizations_url": "https://api.github.com/users/rabbitonweb/orgs",
     "repos_url": "https://api.github.com/users/rabbitonweb/repos",
     "events_url": "https://api.github.com/users/rabbitonweb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rabbitonweb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/21/2016",
    "updated_at": "2016-09-21T10:11:11Z",
    "author_association": "NONE",
    "body": "Let's do this http://blog.haskellformac.com/blog/writing-games-in-haskell-with-spritekit :D\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014139",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-254014139",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 254014139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDEzOQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:10:38Z",
    "author_association": "MEMBER",
    "body": "I'd suggest \"How Scala is different from using Haskell\" in the context of Quasar. Could double as a, \"FP in Scala in the large\" type of talk to show people how to scale up simple concepts to large business applications.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254014172",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-254014172",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 254014172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxNDE3Mg==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T22:11:16Z",
    "author_association": "MEMBER",
    "body": "I vote 👎 to Haskell content since we already have lots of Haskell guides and there will be lots of Scala attendees. 😈 \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254111346",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-254111346",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 254111346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExMTM0Ng==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T04:41:40Z",
    "author_association": "NONE",
    "body": "Would really love to hear about ScalaZ. But would not mind about Cats too. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/255613642",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-255613642",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 255613642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxMzY0Mg==",
    "user": {
     "login": "hirad",
     "id": 1005340,
     "node_id": "MDQ6VXNlcjEwMDUzNDA=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1005340?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hirad",
     "html_url": "https://github.com/hirad",
     "followers_url": "https://api.github.com/users/hirad/followers",
     "following_url": "https://api.github.com/users/hirad/following{/other_user}",
     "gists_url": "https://api.github.com/users/hirad/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hirad/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hirad/subscriptions",
     "organizations_url": "https://api.github.com/users/hirad/orgs",
     "repos_url": "https://api.github.com/users/hirad/repos",
     "events_url": "https://api.github.com/users/hirad/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hirad/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/23/2016",
    "updated_at": "2016-10-23T20:52:41Z",
    "author_association": "NONE",
    "body": "I'm a newcomer, so I'm specially interested in #1. But #2 looks really interesting as well!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256798117",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-256798117",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 256798117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Njc5ODExNw==",
    "user": {
     "login": "mikegehard",
     "id": 128210,
     "node_id": "MDQ6VXNlcjEyODIxMA==",
     "avatar_url": "https://avatars2.githubusercontent.com/u/128210?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mikegehard",
     "html_url": "https://github.com/mikegehard",
     "followers_url": "https://api.github.com/users/mikegehard/followers",
     "following_url": "https://api.github.com/users/mikegehard/following{/other_user}",
     "gists_url": "https://api.github.com/users/mikegehard/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mikegehard/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mikegehard/subscriptions",
     "organizations_url": "https://api.github.com/users/mikegehard/orgs",
     "repos_url": "https://api.github.com/users/mikegehard/repos",
     "events_url": "https://api.github.com/users/mikegehard/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mikegehard/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/27/2016",
    "updated_at": "2016-10-27T23:27:02Z",
    "author_association": "NONE",
    "body": "+1 to some CATS learnings.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258040283",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-258040283",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 258040283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MDI4Mw==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:33:31Z",
    "author_association": "NONE",
    "body": "Would like to hear \"How Scala is different from using Haskell\"\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/265015023",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/6#issuecomment-265015023",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6",
    "id": 265015023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAxNTAyMw==",
    "user": {
     "login": "rabbitonweb",
     "id": 6287558,
     "node_id": "MDQ6VXNlcjYyODc1NTg=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/6287558?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rabbitonweb",
     "html_url": "https://github.com/rabbitonweb",
     "followers_url": "https://api.github.com/users/rabbitonweb/followers",
     "following_url": "https://api.github.com/users/rabbitonweb/following{/other_user}",
     "gists_url": "https://api.github.com/users/rabbitonweb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rabbitonweb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rabbitonweb/subscriptions",
     "organizations_url": "https://api.github.com/users/rabbitonweb/orgs",
     "repos_url": "https://api.github.com/users/rabbitonweb/repos",
     "events_url": "https://api.github.com/users/rabbitonweb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rabbitonweb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/5/2016",
    "updated_at": "2016-12-05T23:48:19Z",
    "author_association": "NONE",
    "body": "# \"Learning FP concepts for greater good.\"\r\n\r\nThis talk is designed for all those interested in learning Functional Programming, to tackle real world problems that they stamp upon every day at work. Functional Programming brings sanity to our industry as it gives you ability to handle complexity with modular & composable code.\r\nKeep in mind however that Functional Programming is not a magic wand that will suddenly make complexity disappear. If your problem is relatively difficult, simple immutable data structures and function composition will not suffice. Complexity is hard, simplicity is however not easy. Good news is: all problems you've encountered have been solved decades ago. Knowing them will prevent you from rediscovering the wheel.\r\n\r\nYou want to attend this session if you are interested in Functional Programming in general & are seriously devoted to making the next big step into the rabbit's hole.\r\n\r\nThis session will be an interactive presentation: you can take your laptop with you and try to follow or sit back and listen - whatever works for you best.\r\n\r\nProgramming language: Scala + ScalaZ (if you prefer Cats, you should be fine as well)\r\n\r\nYou are: professional software developer.\r\n\r\nThings you should already know:\r\n\r\n- Immutability\r\n- Higher order functions & lambdas\r\n- Pattern matching\r\n- General recursion\r\n- Curring\r\n\r\nIn other words: Novice & (partially) Advanced Beginner (*)\r\n\r\nThings you will learn:\r\n- Algebraic Data Types\r\n-  Typeclasses (the general idea; some representatives: Show, Semigroup, Monoid; (bonus) Enlighment: *scary* Monad - is just another typeclass)\r\n- Applicative \r\n- Reader\r\n- Monad transformers\r\n- State\r\n- Task\r\n- Free monad\r\n\r\nIn other words: lifting you from Novice/Advanced Beginner to a Competent apprentice of Functional Programming (*)\r\n\r\nIf time will allow us, at the very end we will study source code of Quasar Analytics - where all above mentioned technics are being used to some extent. We will see how they allow keeping code modular & composable, despite rather complex domain.\r\n\r\nNote about language used: you should be at least basically familiar with Scala language. You don't need to have professional experience with the language, but understanding its basic constructs will be mandatory. You should at least know: how to define class, methods, functions. Have general understanding of pattern matching & implicit arguments.\r\n\r\n(*) see http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/6/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#6"
 },
 {
  "id": 173951656,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2",
  "title": "Guide: Alejandro Serrano",
  "created_by": "serras",
  "created_at": "8/30/2016",
  "body": "I'm Alejandro Serrano, a PhD student in the area of functional programming, currently working in [Utrecht University](http://www.cs.uu.nl/staff/mena.html). I use Haskell for my daily job, but I also like to explore what it is out there, especially in the world of logic (like Prolog) and functional-logic programming (like Curry), and in the large space of theorem proving. I am a fierce defendant of strong typing, although some days I wake up and think \"if only we could have true Lisp macros in Haskell and ML...\".\n\nI am the author of [Beginning Haskell](http://www.apress.com/9781430262503) and have worked in enhancing IDEs for the Haskell world as part of [two Google Summers of Code](http://serras-haskell-gsoc.blogspot.nl/). I have developed several open-source libraries, including a [generalization of regular expressions to arbitrary data types](http://hackage.haskell.org/package/t-regex) and a [Constraint Handling Rules engine](https://git.science.uu.nl/f100183/uchrp/).\n\nAs I said above, I am working on a PhD thesis. The topic: better type error diagnosis for domain-specific languages (aka DSLs). Full story short: we love embedding domain specific languages; they really make programmers more productive. However, when the compiler is not happy with what the user of the DSL wrote, the error message it gets is given in terms of the host language. Thus, we break the abstraction barrier: internals of the DSL leak through error messages, and even worse, the user of the DSL needs to know them to understand error messages. During the past years, my supervisor and I have developed a wide range of techniques for dealing with this problem. If you are interested, you can check my [page at DBLP](http://dblp.uni-trier.de/pers/hd/s/Serrano:Alejandro) where all my papers are indexed.\n\nI am happy to present most introductory topics in Haskell, depending on the demand. However, based on my expertise, I would be interested in talking about some of these topics:\n- **Techniques for embedding DSLs.** There are manu ways to embed a DSL in Haskell. You can create a combinator language. Use a GADT to get a so-called \"initial encoding\". Or arrive to the \"final encoding\" by means of type classes. Meta-programming also gives you a lot of tools. Furthermore, if your DSL has some notion of sequentially, it makes sense to make it a monad, but how: by hand? using a free monad? using an operational monad?\n  \n  The idea is to explore the wide range of possibilities in this area. We shall focus on how good each choice works in terms of syntax, analizability of the code (so we can optimize or detect errors at compile-time) and flexibility in interpretations (so we can write the code once but execute them on different contexts).\n- **Haskell type system.** As part of my job, I have scrutinized almost all literature related to Haskell (and GHC) type system:\n  - The many ways to do polymorphism, from simple parametric polymorphism to higher-rank and impredicative polymorphism.\n  - The initial distinction between types and kinds and how it is blurred by data type promotion and kind-in-kind.\n  - Type classes, and its \"functional\" counterpart, type and data families.\n    - The differences between flexible, overlapping, undecidable and incoherent instances.\n    - Functional dependencies and injectivity annotations.\n  - Extending the language to deal with the local reasoning coming from pattern matching on a GADT.\n  - How to speak of constraints generically, using the _Constraint_ kind.\n  - Boxed and unboxed types and how to write generic functions over those with levity polymorphism.\n  \n  We can explore together examples of all these features, and argue when and how to use them.\n- **Category Theory in Action.** During LambdaConf 2015 I realized that many people (definitely more than I thought!) is interested in category theory. I am definitely not a category theory expert, but rather a category theory user. We can explore the basic notions of category theory: categories, arrows, functors, natural transformations, monads and adjunctions, always keeping an eye at how these notions translate back to functional programming. (Are instances of the Functor class functors?, this kind of questions).\n  \n  Furthermore, I would like to show the power of category theory with two beautiful constructions. One is how to enhance the performance of a monad, almost for free, by using the Yoneda construction. The other one is how to understand a monad as the composition of two adjunctions.\n\nI am very interested in exploring the ideas underlying Common Lisp: macros, multimethods... they seem like a completely different style of programming! Or in a broader sense, the meta-programming facilities found in many languages: Lisp macros, Elixir meta-programming, Template Haskell, MetaOCaml. We can even rethink some of those and hack a small meta-compiler! I am also willing to explore the world of \"reactive\" libraries, from React-like libraries like ClojureScript's Om, to Purescript's Halogen or even .NET Reactive Extensions.\n\n**Of course, if you have any other ideas, feel free to comment below! I'm sure we will all have a very enjoyable time at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243363910",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-243363910",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 243363910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzM2MzkxMA==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/30/2016",
    "updated_at": "2016-08-30T08:05:12Z",
    "author_association": "MEMBER",
    "body": "Or let's go crazy and build a web framework based on the idea that links are morphisms in a category of pages! I know some Haskell web libraries such as Servant and Spock for the server and Persistent and Esqueleto for the database part. We just need a category theorist then ;)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243843096",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-243843096",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 243843096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg0MzA5Ng==",
    "user": {
     "login": "rabbitonweb",
     "id": 6287558,
     "node_id": "MDQ6VXNlcjYyODc1NTg=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/6287558?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rabbitonweb",
     "html_url": "https://github.com/rabbitonweb",
     "followers_url": "https://api.github.com/users/rabbitonweb/followers",
     "following_url": "https://api.github.com/users/rabbitonweb/following{/other_user}",
     "gists_url": "https://api.github.com/users/rabbitonweb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rabbitonweb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rabbitonweb/subscriptions",
     "organizations_url": "https://api.github.com/users/rabbitonweb/orgs",
     "repos_url": "https://api.github.com/users/rabbitonweb/repos",
     "events_url": "https://api.github.com/users/rabbitonweb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rabbitonweb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T17:44:24Z",
    "author_association": "NONE",
    "body": "I don't have any ideas, but I'm just happy you gonna be there :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/243872341",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-243872341",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 243872341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg3MjM0MQ==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "8/31/2016",
    "updated_at": "2016-08-31T19:23:01Z",
    "author_association": "NONE",
    "body": "I'm interested in all those, but I would especially like to hear you talk about techniques for embedding DSLs.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245147396",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-245147396",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 245147396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0NzM5Ng==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:24:13Z",
    "author_association": "NONE",
    "body": "The more practice I can get with various approaches to meta-programming the better. I have some intro to such in Clojure and Elixir. Would love to see examples in other languages. I'm also somewhat intrigued by your work with constraints. Is this related to relational programming (like miniKanran)?\n\nI'm also interested in your proposed Haskell Type System and Category Theory in Action topics. I am a novice at both.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245275609",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-245275609",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 245275609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI3NTYwOQ==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T13:11:59Z",
    "author_association": "MEMBER",
    "body": "Since DSLs seem to be something people like and also something different from other guides, I have sketched a small table of contents of such a talk, to see what people think or would like to add:\n- What is an embedded DSL\n- Simple combinator libraries\n- The difference between syntax and interpretation: shallow vs. deep embeddings\n- Initial encodings, including GADT tricks\n  - Interpretation as a fold\n- Finally tagless encoding\n  - Interpretation as class instance or module implementation\n- Computational DSLs using `Applicative` and `Monad`\n  - Removing boilerplate using `Free` and `Operational`\n- Encoding binding\n  - Higher-Order Abstract Syntax\n  - Locally Nameless using the `unbound` library\n- Meta-programming: Template Haskell and quasi-quotation\n\nI don't know if 2 hours would be enough to cover everything! But everything on the above list is everything I know about embedding DSLs, so it is an upper bound ;)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245275929",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-245275929",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 245275929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI3NTkyOQ==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T13:13:12Z",
    "author_association": "MEMBER",
    "body": "I am also open to discuss the contents of the Category Theory in Action talk during one of the afternoons. This is one talk in which I don't need a projector, just a {white,black}board. If there is another talk which introduces the basic Category Theory concepts, this could be a good way to continue.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245317539",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-245317539",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 245317539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMxNzUzOQ==",
    "user": {
     "login": "haroldcarr",
     "id": 675370,
     "node_id": "MDQ6VXNlcjY3NTM3MA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/675370?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/haroldcarr",
     "html_url": "https://github.com/haroldcarr",
     "followers_url": "https://api.github.com/users/haroldcarr/followers",
     "following_url": "https://api.github.com/users/haroldcarr/following{/other_user}",
     "gists_url": "https://api.github.com/users/haroldcarr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/haroldcarr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/haroldcarr/subscriptions",
     "organizations_url": "https://api.github.com/users/haroldcarr/orgs",
     "repos_url": "https://api.github.com/users/haroldcarr/repos",
     "events_url": "https://api.github.com/users/haroldcarr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/haroldcarr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T15:26:42Z",
    "author_association": "MEMBER",
    "body": "Hello Alejandro: I would be interested in Category Theory in Action and the Haskell Type System (in that order).\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245383406",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-245383406",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 245383406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM4MzQwNg==",
    "user": {
     "login": "nmcb",
     "id": 1698211,
     "node_id": "MDQ6VXNlcjE2OTgyMTE=",
     "avatar_url": "https://avatars2.githubusercontent.com/u/1698211?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/nmcb",
     "html_url": "https://github.com/nmcb",
     "followers_url": "https://api.github.com/users/nmcb/followers",
     "following_url": "https://api.github.com/users/nmcb/following{/other_user}",
     "gists_url": "https://api.github.com/users/nmcb/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/nmcb/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/nmcb/subscriptions",
     "organizations_url": "https://api.github.com/users/nmcb/orgs",
     "repos_url": "https://api.github.com/users/nmcb/repos",
     "events_url": "https://api.github.com/users/nmcb/events{/privacy}",
     "received_events_url": "https://api.github.com/users/nmcb/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T19:06:12Z",
    "author_association": "NONE",
    "body": "Personally? I would benefit and be interested in you doing a _Haskell type system_ talk. Going deep, perhaps compare the system with other languages around? Yes, cat.theory is always interesting, but your  knowledge of Haskell, especially your theoretic level combined with your pragmatism, seems very valuable.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/246954664",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-246954664",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 246954664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk1NDY2NA==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/14/2016",
    "updated_at": "2016-09-26T06:35:18Z",
    "author_association": "MEMBER",
    "body": "Given the interest in the _Haskell type system_ talk, here is a foreseeable table of contents:\n\n**Part 1: the basics**\n- Hindley-Damas-Milner type systems\n  - Types vs. type schemes\n  - Simple checking and inference with algorithm _W_\n- Qualified types: what you have at the left of =>\n  - Type classes and type families\n  - Termination: flexible and undecidable instances\n  - Choice: overlapping and incoherent instances\n  - Improvement: functional dependencies and injectivity annotations\n  - Elaboration: dictionaries and coercions\n- Higher-kinded types, \\* version\n- Qualified constructors and pattern matching: GADTs\n- Inference with constraints\n  - Architectural overview\n  - Skolemization, ambiguity and undischargement errors\n\n**Part 2: going crazy with quantification**\n- More on kinds\n  - Introducing new kinds by data type promotion\n  - Reflecting on value level: the `singletons` construction\n  - Kind polymorphism\n  - Unboxed types: # vs *\n- Higher-rank and impredicative polymorphism\n  - (Un)decidability of these extensions\n- Quantifying over constraints: the Constraint kind\n  - Programming your own instance search procedure\n- Going dependent: _-in-_\n  - Value-level vs type/kind/sort-level\n  - Levity or representation polymorphism\n- Generic programming\n  - Describing regular types with generics\n  - Generic deriving and default implementations\n  - Reflection using `Typeable`, `Dynamic` and `Data`\n- Bonus: refinement types with LiquidHaskell\n\nEdit: expand the \"generic programming\" section\nEdit: added singletons and LiquidHaskell\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254012887",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-254012887",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 254012887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAxMjg4Nw==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/15/2016",
    "updated_at": "2016-10-15T21:42:28Z",
    "author_association": "MEMBER",
    "body": "All of these are equally interesting to me, but I'm slightly biased toward Haskell type system and category theory (especially if the latter gets as far as \"real\" monads, comonads, etc.).\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254112462",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-254112462",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 254112462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExMjQ2Mg==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T04:55:07Z",
    "author_association": "NONE",
    "body": "DSL would be great to hear. Category Theory is great as well. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256139775",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-256139775",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 256139775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzOTc3NQ==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:54:57Z",
    "author_association": "NONE",
    "body": "Free and other 'scary' monads for beginners :)\nThe many ways to do polymorphism\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258041428",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258041428",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258041428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MTQyOA==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:41:18Z",
    "author_association": "NONE",
    "body": " Haskell type system would be cool\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258081077",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258081077",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258081077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA4MTA3Nw==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T07:54:56Z",
    "author_association": "MEMBER",
    "body": "Given the input here, I am considering devoting my slot to Haskell Type System. Two hours might be even too little for so much information, though!\n\nIf @jdegoes finds it OK, we can arrange a room for speaking about Category Theory in the afternoons/evenings a couple of days. Maybe one day we can discuss the basics (category, functor, natural transformations, monads), and the other day look at the topics of the proposed Category Theory in Action (Yoneda for better performance, monad as composition of adjoints). Then people could join either day.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258157324",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258157324",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258157324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1NzMyNA==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:26:51Z",
    "author_association": "NONE",
    "body": "+1 Category theory\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258365999",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258365999",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258365999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM2NTk5OQ==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/4/2016",
    "updated_at": "2016-11-04T08:01:26Z",
    "author_association": "MEMBER",
    "body": "@haroldcarr @rezalesmana @sillypantstoan @mudphone (and any others)\nWhen we speak about \"Category Theory\", at what level are we talking about? That would be very helpful in trying to focus the topic.\n\nMy current idea is to have a \"mini-course\" on Category Theory, which should touch at least category, universal constructions (product, sum, terminal and initial objects), functor, natural transformation, adjoint, free-ness, (co-)monads, (co-)algebras, Yoneda lemma. My aim would not be to formally prove all properties, but rather try to discover them by looking at examples in Haskell (and maybe Scala also).\n\nOne possibility I discussed with the organizers is to split such a \"mini-course\" into 4 or 5 small sessions of 30-45 minutes each day, instead of putting everything together into one big talk where people might get lost. What do you think? Any input is welcome :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258387417",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258387417",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258387417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM4NzQxNw==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/4/2016",
    "updated_at": "2016-11-04T09:58:01Z",
    "author_association": "NONE",
    "body": "My understanding of Category Theory is limited to getting stuck at the first few chapters of various books on the topic, and watching all of Bartosz Milewski's [Category Theory For Programmers playlist](https://www.youtube.com/watch?v=I8LbkfSSR58&list=PLbgaMIhjbmEnaH_LTkxLI7FMa2HsnawM_). Your suggestion of using Haskell to understand Category Theory sounds helpful to me.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258393340",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-258393340",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 258393340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM5MzM0MA==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/4/2016",
    "updated_at": "2016-11-04T10:28:09Z",
    "author_association": "MEMBER",
    "body": "As a matter of concepts, I am definitely going to cover much less than Bartosz's lectures, given the shorter amount of time. My aim is to understand more ideas like:\n- How does the general concept of \"monad\" and \"functor\" relate to Haskell's `Monad` and `Functor`.\n- How does a natural transformation look like in Haskell? (Hint: it is a polymorphic function)\n- How do we model algebraic data types in categorical terms?\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259237960",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-259237960",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 259237960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIzNzk2MA==",
    "user": {
     "login": "gilligan",
     "id": 27668,
     "node_id": "MDQ6VXNlcjI3NjY4",
     "avatar_url": "https://avatars3.githubusercontent.com/u/27668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/gilligan",
     "html_url": "https://github.com/gilligan",
     "followers_url": "https://api.github.com/users/gilligan/followers",
     "following_url": "https://api.github.com/users/gilligan/following{/other_user}",
     "gists_url": "https://api.github.com/users/gilligan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/gilligan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/gilligan/subscriptions",
     "organizations_url": "https://api.github.com/users/gilligan/orgs",
     "repos_url": "https://api.github.com/users/gilligan/repos",
     "events_url": "https://api.github.com/users/gilligan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/gilligan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T19:41:32Z",
    "author_association": "NONE",
    "body": "My vote is definitely for Category Theory. I think CT is something where is such an enormous gain in sitting in the same room so that you can ask questions. Often it is some small detail I get totally stuck with.. \n\n**anyway**: CT baby! :)\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259490417",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-259490417",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 259490417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ5MDQxNw==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/9/2016",
    "updated_at": "2016-12-06T09:23:34Z",
    "author_association": "MEMBER",
    "body": "Here is a concrete description of _Category Theory Through Functional Programming_. Any suggestion is welcome, both in the topics and in the way in which they can be explained.\r\n\r\n### Category Theory Through Functional Programming\r\n\r\n**Language**: snippets will be presented in Haskell and Scala.\r\n\r\n**Target Level**: Fire Lubline / Ice Skrig\r\n\r\nFunctional programming is taking over the world. And with it, categorical thinking is permeating into our code. Notions like functor, monad or free-ness are usual when diving into Haskell or Typelevel Scala. Category theory effectively gives vocabulary for design patterns: the authors of [1](http://www.haskellforall.com/2012/08/the-category-design-pattern.html), [2](http://www.haskellforall.com/2012/09/the-functor-design-pattern.html) and [3](https://www.manning.com/books/functional-and-reactive-domain-modeling) (you should definitely read this book!) make this connection explicit.\r\n\r\nIn order to take advantage of these concepts, it is useful to take a step back and understand the underlying ideas of Category Theory and how they all fit together. Let me be clear: diving into intrincate mathematical theories is not my goal. I want you to understand Category Theory in a practical way, in relation to programming. This relation is two-way:\r\n- Code provides us many examples of categorical structures,\r\n- Conversely, in many cases we can implement categorical notions [directly inside our favorite programming language](https://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Category.html).\r\n\r\nAs a consequence, in order to obtain the maximum return for your time investment, you should have an intermediate knowledge of either Haskell or Scala. If you know how to declare a type class or a trait, what a higher-kinded type (or type constructor) is and have ever used a monad, you are ready. Recent versions of the compiler are recommended, for Haskell GHC 8 is the minimum.\r\n\r\nTeaching tons of concepts in just one session makes no sense. Ideas need some time to sink before you can effectively build upon them. Thus, our exploration of Category Theory will proceed in daily small pills, of around 45 minutes every day. The (preliminary) list of topics is:\r\n1. Introduction to categories.\r\n2. Simple universal constructions: (co)products, terminal and initial objects.\r\n3. The principle of duality.\r\n4. Functors.\r\n5. Natural transformations.\r\n6. (Co)monads.\r\n7. Adjoints and their relation to (co)monads.\r\n8. Exponentials.\r\n9. Free constructions.\r\n10. (Initial) algebras for a functor.\r\n11. The Yoneda Lemma.\r\n12. Monoidal functors."
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269569896",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/2#issuecomment-269569896",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2",
    "id": 269569896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU2OTg5Ng==",
    "user": {
     "login": "ghost",
     "id": 10137,
     "node_id": "MDQ6VXNlcjEwMTM3",
     "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ghost",
     "html_url": "https://github.com/ghost",
     "followers_url": "https://api.github.com/users/ghost/followers",
     "following_url": "https://api.github.com/users/ghost/following{/other_user}",
     "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
     "organizations_url": "https://api.github.com/users/ghost/orgs",
     "repos_url": "https://api.github.com/users/ghost/repos",
     "events_url": "https://api.github.com/users/ghost/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ghost/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/29/2016",
    "updated_at": "2016-12-29T01:49:16Z",
    "author_association": "NONE",
    "body": "Alejandro, this looks AWESOME. would you recommend attempting to transcribe or implement versions of the code snippets from the talk into Clojure as an exercise? I'm a little more familiar w type theory than I am w category theory so I could be way off in terms of it's relation to lisps, but i'd be curious for the challenge anyway "
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/2/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#2"
 },
 {
  "id": 173850545,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1",
  "title": "Guide: John A. De Goes",
  "created_by": "jdegoes",
  "created_at": "8/29/2016",
  "body": "I'm John A. De Goes, an advanced functional programmer who currently works with Scala and PureScript, with an occasional bit of Haskell. I love clean solutions, static types, and composing large programs from smaller ones in a way that embraces composable and equational reasoning.\n\nI've written many open source functional libraries, including [purescript-aff](http://github.com/slamdata/purescript-aff), [purescript-io](http://github.com/slamdata/purescript-io), [purescript-mockfree](http://github.com/slamdata/purescript-mockfree), and portions of [Quasar Analytics](http://github.com/quasar-analytics/quasar).\n\nI am happy to present or lead workshops on a wide range of topics, based on demand. Currently, I'm most interested in the following subjects:\n- **Post-Free**. Testing, mocking, analysis, and optimization all benefit from the Free monad approach, but Free itself is just one constrained example of something much more general purpose: a reified model of program computation. If you move beyond Free, you open up the door to modeling parallel and semantic computation, program failure, distributed computation, and many other constructs in a way that provides all the benefits of Free but to more than just purely sequential computation.\n- **Incremental UIs**. React and FRP are both examples of new ways of thinking about user-interfaces which are easier to reason about than the alternatives. Yet I think more fundamental and performant than either is a user-interface paradigm built on an incremental model of computation. With type systems like PureScript, we may finally have the ability to express such a model in a type safe way that has an efficient implementation.\n\nI'm also interested in hacking on a PureScript super-compiler based on partial evaluation, building a web service DSL in Scala or PureScript based on invertible, free applicative parsers, hacking on a Dotty-based FP library for Scala, and working on a dependency or build tool for PureScript based on free arrows or something less powerful.\n\n**If you have ideas for what I should speak on at the Winter Retreat, please post them below! Vote on ideas by using the thumbs up / thumbs down emojis. Thanks in advance for all of your feedback, and I look forward to being a guide at LambdaConf Winter Retreat 2017!**\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244509051",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-244509051",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 244509051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDUwOTA1MQ==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/2/2016",
    "updated_at": "2016-09-02T23:23:18Z",
    "author_association": "NONE",
    "body": "OK, I guess I'm first. I'd like to hear about incremental UIs. I don't know much about that topic at all, but it sounds pretty cool. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245145565",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-245145565",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 245145565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0NTU2NQ==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:14:58Z",
    "author_association": "NONE",
    "body": "PureScript (FP in the browser), Quasar Analytics (I'm currently working on a lot of data parsing and analytics), and Incremental UIs (again, more FP in the browser, I'm currently using Reagent) sound interesting to me!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245320311",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-245320311",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 245320311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMyMDMxMQ==",
    "user": {
     "login": "haroldcarr",
     "id": 675370,
     "node_id": "MDQ6VXNlcjY3NTM3MA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/675370?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/haroldcarr",
     "html_url": "https://github.com/haroldcarr",
     "followers_url": "https://api.github.com/users/haroldcarr/followers",
     "following_url": "https://api.github.com/users/haroldcarr/following{/other_user}",
     "gists_url": "https://api.github.com/users/haroldcarr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/haroldcarr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/haroldcarr/subscriptions",
     "organizations_url": "https://api.github.com/users/haroldcarr/orgs",
     "repos_url": "https://api.github.com/users/haroldcarr/repos",
     "events_url": "https://api.github.com/users/haroldcarr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/haroldcarr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T15:34:48Z",
    "author_association": "MEMBER",
    "body": "+1 for Post Free.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/247219467",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-247219467",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 247219467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzIxOTQ2Nw==",
    "user": {
     "login": "ShaneDelmore",
     "id": 4604933,
     "node_id": "MDQ6VXNlcjQ2MDQ5MzM=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/4604933?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ShaneDelmore",
     "html_url": "https://github.com/ShaneDelmore",
     "followers_url": "https://api.github.com/users/ShaneDelmore/followers",
     "following_url": "https://api.github.com/users/ShaneDelmore/following{/other_user}",
     "gists_url": "https://api.github.com/users/ShaneDelmore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ShaneDelmore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ShaneDelmore/subscriptions",
     "organizations_url": "https://api.github.com/users/ShaneDelmore/orgs",
     "repos_url": "https://api.github.com/users/ShaneDelmore/repos",
     "events_url": "https://api.github.com/users/ShaneDelmore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ShaneDelmore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/15/2016",
    "updated_at": "2016-09-15T02:54:43Z",
    "author_association": "NONE",
    "body": "A dotty based FP library for Scala would be fun. I would also be interested in working on a web service dsl as I have recently been interested in how I could better use types to build documentation of the types of responses a web service can return. \n\nI wonder how close Scala could get to the sort of guarantees that can be made in a fully DP web server like https://github.com/arianvp/servis ?\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/248495575",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-248495575",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 248495575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODQ5NTU3NQ==",
    "user": {
     "login": "philotimos",
     "id": 1550536,
     "node_id": "MDQ6VXNlcjE1NTA1MzY=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/1550536?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/philotimos",
     "html_url": "https://github.com/philotimos",
     "followers_url": "https://api.github.com/users/philotimos/followers",
     "following_url": "https://api.github.com/users/philotimos/following{/other_user}",
     "gists_url": "https://api.github.com/users/philotimos/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/philotimos/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/philotimos/subscriptions",
     "organizations_url": "https://api.github.com/users/philotimos/orgs",
     "repos_url": "https://api.github.com/users/philotimos/repos",
     "events_url": "https://api.github.com/users/philotimos/events{/privacy}",
     "received_events_url": "https://api.github.com/users/philotimos/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/21/2016",
    "updated_at": "2016-09-21T02:42:46Z",
    "author_association": "NONE",
    "body": "I'd love to hear more about the FP in Quasar, especially after seeing @extempore2's posts on Twitter.  I'd also very interested in exploring Post-Free and how to transition a code base to these patterns, especially after coming across raulraja's Run Wild, Run Free presentation [https://speakerdeck.com/raulraja/run-wild-run-free].\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254110635",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-254110635",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 254110635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExMDYzNQ==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T04:32:59Z",
    "author_association": "NONE",
    "body": "Post-Free and Quasar Analytics would be great. Looking forward to those topics. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256139996",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-256139996",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 256139996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzOTk5Ng==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:55:36Z",
    "author_association": "NONE",
    "body": "Something on why purescript vs GHCjs or Elm\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258041570",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-258041570",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 258041570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA0MTU3MA==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:42:28Z",
    "author_association": "NONE",
    "body": "I am voting for incremental UIs. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259238235",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-259238235",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 259238235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIzODIzNQ==",
    "user": {
     "login": "gilligan",
     "id": 27668,
     "node_id": "MDQ6VXNlcjI3NjY4",
     "avatar_url": "https://avatars3.githubusercontent.com/u/27668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/gilligan",
     "html_url": "https://github.com/gilligan",
     "followers_url": "https://api.github.com/users/gilligan/followers",
     "following_url": "https://api.github.com/users/gilligan/following{/other_user}",
     "gists_url": "https://api.github.com/users/gilligan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/gilligan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/gilligan/subscriptions",
     "organizations_url": "https://api.github.com/users/gilligan/orgs",
     "repos_url": "https://api.github.com/users/gilligan/repos",
     "events_url": "https://api.github.com/users/gilligan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/gilligan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/8/2016",
    "updated_at": "2016-11-08T19:42:32Z",
    "author_association": "NONE",
    "body": "I'm interested in purescript.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264663441",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-264663441",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 264663441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY2MzQ0MQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/3/2016",
    "updated_at": "2016-12-03T20:34:33Z",
    "author_association": "MEMBER",
    "body": "## Primary: Beyond Free Monads\r\n\r\nFree monads and free applicatives have proven an incredibly useful tool in repertoire of the functional programmer: they separate concerns, encourage denotational semantics for program specification, allow easy and type-safe mocking of purely functional code, and allow dynamic introspection and optimization.\r\n\r\nDespite these benefits, free monads are notoriously constrained: by themselves, they cannot handle parallelism (only sequentiality), and because they provide only a monad, richer structures (such as monads that fail, or monads that support alternation) cannot be expressed without crude hacks that limit composability and expressiveness.\r\n\r\nIn this session, John A. De Goes shows how the free monad can be deconstructed for its individual features, and then rebuilt using a more powerful technique that enables more extensibility. The resulting structure — no longer technically a \"free monad\" — allows reification of as few or as many aspects of computation as are necessary to model the problem domain.\r\n\r\nAfter the session, attendees will know how to augment their existing free programs to add parallelism, racing, failure, and other aspects of computation as required by their problem. In addition, through this thorough deconstruction and reconstruction of the free monad, attendees will have a very deep understanding of reified computation and why the free monad has the structure and limitations it does.\r\n\r\n**Languages**: Code snippets will be presented in both Scala and PureScript.\r\n\r\n**Target Level**: [Ice Skrig](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf)\r\n\r\n## Bonus: Incremental UIs in PureScript\r\n\r\nIn this lightning presentation, explore a foundation for incremental computation for user-interfaces, and how development of such a model would enable efficient, declarative, mockable user-interface logic that cleanly separates business concerns from user-interface concerns.\r\n\r\n**Languages**: Code snippets will be presented in PureScript.\r\n\r\n**Target Level**: [Ice Skrig](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf)\r\n\r\n## Bonus: Purely Functional Actors\r\n\r\nIn this lightning presentation, explore a purely functional model for actors that provides high-composability, high-flexibility, and complete type safety in actor request / response, while supporting purely-functional effects in IO, MTL or Free styles.\r\n\r\n**Languages**: Code snippets will be presented in both Scala and PureScript.\r\n\r\n**Target Level**: [Fire Lubline](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf)"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269557607",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-269557607",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 269557607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU1NzYwNw==",
    "user": {
     "login": "ghost",
     "id": 10137,
     "node_id": "MDQ6VXNlcjEwMTM3",
     "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ghost",
     "html_url": "https://github.com/ghost",
     "followers_url": "https://api.github.com/users/ghost/followers",
     "following_url": "https://api.github.com/users/ghost/following{/other_user}",
     "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
     "organizations_url": "https://api.github.com/users/ghost/orgs",
     "repos_url": "https://api.github.com/users/ghost/repos",
     "events_url": "https://api.github.com/users/ghost/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ghost/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/28/2016",
    "updated_at": "2016-12-28T23:24:18Z",
    "author_association": "NONE",
    "body": "Hey John, I'm thinking ahead to adapting some presentations into Clojure exercises in case everyone goes out skiing❄️ ❄️ 🌁 ❄️ 🌁 ❄️ 🌁 ❄️ 🌁 ❄️ -- Even if it was just translating Scala or Purescript code directly from your slides. Do you think this sounds like a rewarding exercise? I'm open to any ideas. My logic & philosophy grasp is around Fire Lubline, but my coding is still quite Keramik. "
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269558345",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-269558345",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 269558345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU1ODM0NQ==",
    "user": {
     "login": "jdegoes",
     "id": 156745,
     "node_id": "MDQ6VXNlcjE1Njc0NQ==",
     "avatar_url": "https://avatars1.githubusercontent.com/u/156745?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jdegoes",
     "html_url": "https://github.com/jdegoes",
     "followers_url": "https://api.github.com/users/jdegoes/followers",
     "following_url": "https://api.github.com/users/jdegoes/following{/other_user}",
     "gists_url": "https://api.github.com/users/jdegoes/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jdegoes/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jdegoes/subscriptions",
     "organizations_url": "https://api.github.com/users/jdegoes/orgs",
     "repos_url": "https://api.github.com/users/jdegoes/repos",
     "events_url": "https://api.github.com/users/jdegoes/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jdegoes/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/28/2016",
    "updated_at": "2016-12-28T23:31:59Z",
    "author_association": "MEMBER",
    "body": "@soth-ing This sounds awesome and would make my talks more accessible. 👍 I should have everything mostly together in another week. Anything in particular you want to learn at the retreat, btw?"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/269835776",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/1#issuecomment-269835776",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1",
    "id": 269835776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTgzNTc3Ng==",
    "user": {
     "login": "ghost",
     "id": 10137,
     "node_id": "MDQ6VXNlcjEwMTM3",
     "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ghost",
     "html_url": "https://github.com/ghost",
     "followers_url": "https://api.github.com/users/ghost/followers",
     "following_url": "https://api.github.com/users/ghost/following{/other_user}",
     "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
     "organizations_url": "https://api.github.com/users/ghost/orgs",
     "repos_url": "https://api.github.com/users/ghost/repos",
     "events_url": "https://api.github.com/users/ghost/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ghost/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/30/2016",
    "updated_at": "2016-12-30T23:46:08Z",
    "author_association": "NONE",
    "body": "Just hoping to boost my practical understanding. Would love to code as much as possible. Been thinking a lot about composite functions & macros for order of operations and parsing expressions in Clojure, which will be spurred nicely by some of the category theory seminars. \r\n\r\nIf you have any leads about deconstructing & rebuilding monads in a more lisp-like syntax, I would certainly do my best to put them to good use 😺 (am currently reading tutorials for org.clojure/algo.monads and getting my thoughts more toward cat theory and less toward type theory & lambda calc)"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/1/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#1"
 },
 {
  "id": 174630293,
  "url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7",
  "title": "Guide: Gabriel Gonzalez",
  "created_by": "Gabriel439",
  "created_at": "9/1/2016",
  "body": "I'm probably one of the biggest Haskell fanboys alive: I [blog about Haskell](haskellforall.com) and also maintain several [Haskell packages](https://hackage.haskell.org/user/GabrielGonzalez).  I believe mathematics is the future of programming and nothing delights me more than elegant solutions to practical problems.\n\nThe best presentations I give are in subjects that I'm only just beginning to learn, because I explain things better to others when I approach them with a beginner's eyes.  Some candidate subjects that I've just begun learning where I have cool new things to share are:\n- APIs for data science\n- high-performance lambda calculus evaluators\n- high-performance algorithms based on succinct data structures\n- game programming\n- event sourcing\n\nHowever, I'm also happy to revisit topics that I've blogged or presented about before, such as:\n- [equational reasoning](http://www.haskellforall.com/2013/12/equational-reasoning.html)\n- [the relevance of category theory to programming](http://www.haskellforall.com/2012/08/the-category-design-pattern.html)\n- [shell scripting in Haskell](http://www.haskellforall.com/2015/01/use-haskell-for-shell-scripting.html)\n- [total functional programming](http://www.haskellforall.com/2016/04/data-is-code.html)\n- [Liquid Haskell](http://www.haskellforall.com/2015/12/compile-time-memory-safety-using-liquid.html)\n- [`Applicative` GUIs](http://www.haskellforall.com/2015/11/interactive-and-composable-charts.html)\n- [composable folds](http://www.haskellforall.com/2013/08/composable-streaming-folds.html)\n\nPlease suggest any topics you are interested in, even if they are not listed above.\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244246840",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-244246840",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 244246840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDI0Njg0MA==",
    "user": {
     "login": "jethrolarson",
     "id": 32480,
     "node_id": "MDQ6VXNlcjMyNDgw",
     "avatar_url": "https://avatars0.githubusercontent.com/u/32480?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jethrolarson",
     "html_url": "https://github.com/jethrolarson",
     "followers_url": "https://api.github.com/users/jethrolarson/followers",
     "following_url": "https://api.github.com/users/jethrolarson/following{/other_user}",
     "gists_url": "https://api.github.com/users/jethrolarson/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jethrolarson/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jethrolarson/subscriptions",
     "organizations_url": "https://api.github.com/users/jethrolarson/orgs",
     "repos_url": "https://api.github.com/users/jethrolarson/repos",
     "events_url": "https://api.github.com/users/jethrolarson/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jethrolarson/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/1/2016",
    "updated_at": "2016-09-01T23:54:18Z",
    "author_association": "NONE",
    "body": "I'm interested in techniques for doing high performance game programming without loosing the FP goodness.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244268345",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-244268345",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 244268345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDI2ODM0NQ==",
    "user": {
     "login": "pazthor",
     "id": 1523469,
     "node_id": "MDQ6VXNlcjE1MjM0Njk=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/1523469?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/pazthor",
     "html_url": "https://github.com/pazthor",
     "followers_url": "https://api.github.com/users/pazthor/followers",
     "following_url": "https://api.github.com/users/pazthor/following{/other_user}",
     "gists_url": "https://api.github.com/users/pazthor/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/pazthor/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/pazthor/subscriptions",
     "organizations_url": "https://api.github.com/users/pazthor/orgs",
     "repos_url": "https://api.github.com/users/pazthor/repos",
     "events_url": "https://api.github.com/users/pazthor/events{/privacy}",
     "received_events_url": "https://api.github.com/users/pazthor/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/2/2016",
    "updated_at": "2016-09-02T02:35:58Z",
    "author_association": "NONE",
    "body": "I'm interesting in _the relevance of category theory to programming_ (I beginner on FP ) . \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244284808",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-244284808",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 244284808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDI4NDgwOA==",
    "user": {
     "login": "l-d-s",
     "id": 6633934,
     "node_id": "MDQ6VXNlcjY2MzM5MzQ=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/6633934?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/l-d-s",
     "html_url": "https://github.com/l-d-s",
     "followers_url": "https://api.github.com/users/l-d-s/followers",
     "following_url": "https://api.github.com/users/l-d-s/following{/other_user}",
     "gists_url": "https://api.github.com/users/l-d-s/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/l-d-s/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/l-d-s/subscriptions",
     "organizations_url": "https://api.github.com/users/l-d-s/orgs",
     "repos_url": "https://api.github.com/users/l-d-s/repos",
     "events_url": "https://api.github.com/users/l-d-s/events{/privacy}",
     "received_events_url": "https://api.github.com/users/l-d-s/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/2/2016",
    "updated_at": "2016-09-15T01:38:39Z",
    "author_association": "NONE",
    "body": "I won't be attending, but am very interested in your thoughts on APIs for data science.\n\nI'm a big fan of \n-   the `dplyr` and `tidyr` interfaces to relational/tabular data in R (which I use very regularly), and\n-   the idea of LINQ (which I don't use, but AFAIK is extremely close in spirit to GHC's monad comprehensions extension).\n\nI've often wondered how `dplyr` and `tidyr`-like APIs for munging data tables might work in Haskell (especially in `ghci` -- most of my work is done interactively or in notebooks).\n\nThe biggest difficulty seems to be the one that F#'s \"type providers\" aim to solve (\"Object-Relational Mapping\", I believe). Could Haskell get something like this without TH or dependent types?\n\nSee also: [this Reddit comment](https://www.reddit.com/r/haskell/comments/52s0rx/working_with_data_in_haskell/d7n8m63).\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/244302262",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-244302262",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 244302262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDMwMjI2Mg==",
    "user": {
     "login": "argumatronic",
     "id": 8098270,
     "node_id": "MDQ6VXNlcjgwOTgyNzA=",
     "avatar_url": "https://avatars1.githubusercontent.com/u/8098270?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/argumatronic",
     "html_url": "https://github.com/argumatronic",
     "followers_url": "https://api.github.com/users/argumatronic/followers",
     "following_url": "https://api.github.com/users/argumatronic/following{/other_user}",
     "gists_url": "https://api.github.com/users/argumatronic/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/argumatronic/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/argumatronic/subscriptions",
     "organizations_url": "https://api.github.com/users/argumatronic/orgs",
     "repos_url": "https://api.github.com/users/argumatronic/repos",
     "events_url": "https://api.github.com/users/argumatronic/events{/privacy}",
     "received_events_url": "https://api.github.com/users/argumatronic/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/2/2016",
    "updated_at": "2016-09-02T07:22:34Z",
    "author_association": "NONE",
    "body": "I am quite curious about the APIs for data science, personally. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245148452",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-245148452",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 245148452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE0ODQ1Mg==",
    "user": {
     "login": "mudphone",
     "id": 24647,
     "node_id": "MDQ6VXNlcjI0NjQ3",
     "avatar_url": "https://avatars2.githubusercontent.com/u/24647?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mudphone",
     "html_url": "https://github.com/mudphone",
     "followers_url": "https://api.github.com/users/mudphone/followers",
     "following_url": "https://api.github.com/users/mudphone/following{/other_user}",
     "gists_url": "https://api.github.com/users/mudphone/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mudphone/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mudphone/subscriptions",
     "organizations_url": "https://api.github.com/users/mudphone/orgs",
     "repos_url": "https://api.github.com/users/mudphone/repos",
     "events_url": "https://api.github.com/users/mudphone/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mudphone/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T01:31:16Z",
    "author_association": "NONE",
    "body": "Throwing in my vote for data science and game programming.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/245318587",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-245318587",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 245318587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMxODU4Nw==",
    "user": {
     "login": "haroldcarr",
     "id": 675370,
     "node_id": "MDQ6VXNlcjY3NTM3MA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/675370?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/haroldcarr",
     "html_url": "https://github.com/haroldcarr",
     "followers_url": "https://api.github.com/users/haroldcarr/followers",
     "following_url": "https://api.github.com/users/haroldcarr/following{/other_user}",
     "gists_url": "https://api.github.com/users/haroldcarr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/haroldcarr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/haroldcarr/subscriptions",
     "organizations_url": "https://api.github.com/users/haroldcarr/orgs",
     "repos_url": "https://api.github.com/users/haroldcarr/repos",
     "events_url": "https://api.github.com/users/haroldcarr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/haroldcarr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/7/2016",
    "updated_at": "2016-09-07T15:29:41Z",
    "author_association": "MEMBER",
    "body": "Interested (in the listed order):\n- the relevance of category theory to programming\n- total functional programming\n- high-performance algorithms based on succinct data structures\n- composable folds\n- shell scripting in Haskell\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/247017046",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-247017046",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 247017046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzAxNzA0Ng==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "9/14/2016",
    "updated_at": "2016-09-14T13:44:07Z",
    "author_association": "MEMBER",
    "body": "I would really like to hear about event sourcing. It seems like a good match for FP, but I have never had the chance to hear how to mix both successfully in a project.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/254110942",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-254110942",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 254110942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExMDk0Mg==",
    "user": {
     "login": "rezalesmana",
     "id": 1837406,
     "node_id": "MDQ6VXNlcjE4Mzc0MDY=",
     "avatar_url": "https://avatars0.githubusercontent.com/u/1837406?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/rezalesmana",
     "html_url": "https://github.com/rezalesmana",
     "followers_url": "https://api.github.com/users/rezalesmana/followers",
     "following_url": "https://api.github.com/users/rezalesmana/following{/other_user}",
     "gists_url": "https://api.github.com/users/rezalesmana/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/rezalesmana/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/rezalesmana/subscriptions",
     "organizations_url": "https://api.github.com/users/rezalesmana/orgs",
     "repos_url": "https://api.github.com/users/rezalesmana/repos",
     "events_url": "https://api.github.com/users/rezalesmana/events{/privacy}",
     "received_events_url": "https://api.github.com/users/rezalesmana/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/17/2016",
    "updated_at": "2016-10-17T04:36:46Z",
    "author_association": "NONE",
    "body": "\"high-performance algorithms based on succinct data structures\" or \"event sourcing\" is the topic that will be great to learn about. Hopefully can make it to the winter retreat 2017. \n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256137287",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-256137287",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 256137287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzNzI4Nw==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/25/2016",
    "updated_at": "2016-10-25T18:49:47Z",
    "author_association": "NONE",
    "body": "Shell scripting in Haskell, especially for those ones that you only look at once in a while and want it easy to be maintainable!\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/256812264",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-256812264",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 256812264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgxMjI2NA==",
    "user": {
     "login": "nomicflux",
     "id": 13767188,
     "node_id": "MDQ6VXNlcjEzNzY3MTg4",
     "avatar_url": "https://avatars0.githubusercontent.com/u/13767188?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/nomicflux",
     "html_url": "https://github.com/nomicflux",
     "followers_url": "https://api.github.com/users/nomicflux/followers",
     "following_url": "https://api.github.com/users/nomicflux/following{/other_user}",
     "gists_url": "https://api.github.com/users/nomicflux/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/nomicflux/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/nomicflux/subscriptions",
     "organizations_url": "https://api.github.com/users/nomicflux/orgs",
     "repos_url": "https://api.github.com/users/nomicflux/repos",
     "events_url": "https://api.github.com/users/nomicflux/events{/privacy}",
     "received_events_url": "https://api.github.com/users/nomicflux/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "10/28/2016",
    "updated_at": "2016-10-28T01:12:25Z",
    "author_association": "NONE",
    "body": "I'll put in yet another vote for APIs for data science.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258039484",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-258039484",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 258039484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODAzOTQ4NA==",
    "user": {
     "login": "ErrorNullPointer",
     "id": 11443316,
     "node_id": "MDQ6VXNlcjExNDQzMzE2",
     "avatar_url": "https://avatars2.githubusercontent.com/u/11443316?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ErrorNullPointer",
     "html_url": "https://github.com/ErrorNullPointer",
     "followers_url": "https://api.github.com/users/ErrorNullPointer/followers",
     "following_url": "https://api.github.com/users/ErrorNullPointer/following{/other_user}",
     "gists_url": "https://api.github.com/users/ErrorNullPointer/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ErrorNullPointer/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ErrorNullPointer/subscriptions",
     "organizations_url": "https://api.github.com/users/ErrorNullPointer/orgs",
     "repos_url": "https://api.github.com/users/ErrorNullPointer/repos",
     "events_url": "https://api.github.com/users/ErrorNullPointer/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ErrorNullPointer/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T00:27:28Z",
    "author_association": "NONE",
    "body": "I vote for \"APIs for data science\"\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/258159787",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-258159787",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 258159787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODE1OTc4Nw==",
    "user": {
     "login": "LambdaMathematician",
     "id": 22060734,
     "node_id": "MDQ6VXNlcjIyMDYwNzM0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/22060734?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LambdaMathematician",
     "html_url": "https://github.com/LambdaMathematician",
     "followers_url": "https://api.github.com/users/LambdaMathematician/followers",
     "following_url": "https://api.github.com/users/LambdaMathematician/following{/other_user}",
     "gists_url": "https://api.github.com/users/LambdaMathematician/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LambdaMathematician/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LambdaMathematician/subscriptions",
     "organizations_url": "https://api.github.com/users/LambdaMathematician/orgs",
     "repos_url": "https://api.github.com/users/LambdaMathematician/repos",
     "events_url": "https://api.github.com/users/LambdaMathematician/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LambdaMathematician/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/3/2016",
    "updated_at": "2016-11-03T14:35:23Z",
    "author_association": "NONE",
    "body": "+1 Relevance of category theory to programming\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259753039",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-259753039",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 259753039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc1MzAzOQ==",
    "user": {
     "login": "Gabriel439",
     "id": 1313787,
     "node_id": "MDQ6VXNlcjEzMTM3ODc=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/1313787?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Gabriel439",
     "html_url": "https://github.com/Gabriel439",
     "followers_url": "https://api.github.com/users/Gabriel439/followers",
     "following_url": "https://api.github.com/users/Gabriel439/following{/other_user}",
     "gists_url": "https://api.github.com/users/Gabriel439/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Gabriel439/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Gabriel439/subscriptions",
     "organizations_url": "https://api.github.com/users/Gabriel439/orgs",
     "repos_url": "https://api.github.com/users/Gabriel439/repos",
     "events_url": "https://api.github.com/users/Gabriel439/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Gabriel439/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/10/2016",
    "updated_at": "2016-11-10T17:27:05Z",
    "author_association": "NONE",
    "body": "Okay, so the final tally (using [approval voting](https://en.wikipedia.org/wiki/Approval_voting)) is:\n- Data science - 12 votes\n- Relevance of category theory to programming - 8 votes\n- Event sourcing - 6 votes\n- Shell scripting - 4 votes\n- Game programming - 3 votes\n- Succinct data structures - 3 votes\n- Total functional programming - 2 votes\n- Composable folds - 2 votes\n\nI've been informed that I can split the 2 hour session into several sessions so what I will do is:\n- 1 hour session on \"relevance of category theory to programming\"\n- 1 hour session on \"data science APIs\"\n\nI feel that these two topics complement each other nicely because I would like to tie in data science APIs to category theory anyway\n\nIf nobody objects then I'll proceed to write up the descriptions for those two sessions\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259768934",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-259768934",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 259768934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc2ODkzNA==",
    "user": {
     "login": "purefunctions",
     "id": 23061263,
     "node_id": "MDQ6VXNlcjIzMDYxMjYz",
     "avatar_url": "https://avatars2.githubusercontent.com/u/23061263?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/purefunctions",
     "html_url": "https://github.com/purefunctions",
     "followers_url": "https://api.github.com/users/purefunctions/followers",
     "following_url": "https://api.github.com/users/purefunctions/following{/other_user}",
     "gists_url": "https://api.github.com/users/purefunctions/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/purefunctions/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/purefunctions/subscriptions",
     "organizations_url": "https://api.github.com/users/purefunctions/orgs",
     "repos_url": "https://api.github.com/users/purefunctions/repos",
     "events_url": "https://api.github.com/users/purefunctions/events{/privacy}",
     "received_events_url": "https://api.github.com/users/purefunctions/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/10/2016",
    "updated_at": "2016-11-10T18:30:53Z",
    "author_association": "NONE",
    "body": "That sounds good Gabriel!\n\nWould you also be available outside of these talks to guide us on /  talk about shell scripting? I’m interested in using Haskell for shell scripting and related areas.\n\nFrom: Gabriel Gonzalez [mailto:notifications@github.com]\nSent: Thursday, November 10, 2016 9:27 AM\nTo: lambdaconf/winter-retreat-2017 winter-retreat-2017@noreply.github.com\nCc: Siva Jayaraman siva@virtuosic.net; Comment comment@noreply.github.com\nSubject: Re: [lambdaconf/winter-retreat-2017] Guide: Gabriel Gonzalez (#7)\n\nOkay, so the final tally (using approval votinghttps://en.wikipedia.org/wiki/Approval_voting) is:\n-   Data science - 12 votes\n-   Relevance of category theory to programming - 8 votes\n-   Event sourcing - 6 votes\n-   Shell scripting - 4 votes\n-   Game programming - 3 votes\n-   Succinct data structures - 3 votes\n-   Total functional programming - 2 votes\n-   Composable folds - 2 votes\n\nI've been informed that I can split the 2 hour session into several sessions so what I will do is:\n-   1 hour session on \"relevance of category theory to programming\"\n-   1 hour session on \"data science APIs\"\n\nI feel that these two topics complement each other nicely because I would like to tie in data science APIs to category theory anyway\n\nIf nobody objects then I'll proceed to write up the descriptions for those two sessions\n\n—\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-259753039, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AV_jD1H6HbInjBsdsL2lawea3NLWFxqsks5q81PpgaJpZM4JzJk9.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/259802621",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-259802621",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 259802621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgwMjYyMQ==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/10/2016",
    "updated_at": "2016-11-10T20:46:33Z",
    "author_association": "MEMBER",
    "body": "It seems that I (#2) will also talk about category theory, but as an introductory course. Maybe we can arrange it in such a way that people get the most from both your talk and my course: ensuring that I cover any notion that you have as prerequisite for your talk, showing the relevance of CT on the last day, and that kind of things.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/260196894",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-260196894",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 260196894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE5Njg5NA==",
    "user": {
     "login": "Gabriel439",
     "id": 1313787,
     "node_id": "MDQ6VXNlcjEzMTM3ODc=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/1313787?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Gabriel439",
     "html_url": "https://github.com/Gabriel439",
     "followers_url": "https://api.github.com/users/Gabriel439/followers",
     "following_url": "https://api.github.com/users/Gabriel439/following{/other_user}",
     "gists_url": "https://api.github.com/users/Gabriel439/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Gabriel439/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Gabriel439/subscriptions",
     "organizations_url": "https://api.github.com/users/Gabriel439/orgs",
     "repos_url": "https://api.github.com/users/Gabriel439/repos",
     "events_url": "https://api.github.com/users/Gabriel439/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Gabriel439/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/13/2016",
    "updated_at": "2016-11-13T16:39:56Z",
    "author_association": "NONE",
    "body": "My talk focuses more on the relevance and less on advanced concepts.  I doubt I will cover anything fancier than categories/monoids, functors, and monads.  I will be covering things like how to use category theory to organize proofs and how to simplify APIs and software architecture.  You can get an idea of what the first talk will about by reading these posts:\n- [Equational reasoning at scale](http://www.haskellforall.com/2014/07/equational-reasoning-at-scale.html)\n- [Scalable program architectures](http://www.haskellforall.com/2014/04/scalable-program-architectures.html)\n\nHowever, I would like to keep the talk self-contained\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/260275280",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-260275280",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 260275280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI3NTI4MA==",
    "user": {
     "login": "serras",
     "id": 309334,
     "node_id": "MDQ6VXNlcjMwOTMzNA==",
     "avatar_url": "https://avatars0.githubusercontent.com/u/309334?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/serras",
     "html_url": "https://github.com/serras",
     "followers_url": "https://api.github.com/users/serras/followers",
     "following_url": "https://api.github.com/users/serras/following{/other_user}",
     "gists_url": "https://api.github.com/users/serras/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/serras/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/serras/subscriptions",
     "organizations_url": "https://api.github.com/users/serras/orgs",
     "repos_url": "https://api.github.com/users/serras/repos",
     "events_url": "https://api.github.com/users/serras/events{/privacy}",
     "received_events_url": "https://api.github.com/users/serras/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "11/14/2016",
    "updated_at": "2016-11-14T08:27:29Z",
    "author_association": "MEMBER",
    "body": "That sounds great! I completely understand that you want to keep it self-contained. But I still think that the schedule can be arranged so that people who are not as familiar with CT can go to the introduction and then have a better base to understand your talk.\n"
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264670170",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-264670170",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 264670170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY3MDE3MA==",
    "user": {
     "login": "Gabriel439",
     "id": 1313787,
     "node_id": "MDQ6VXNlcjEzMTM3ODc=",
     "avatar_url": "https://avatars3.githubusercontent.com/u/1313787?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Gabriel439",
     "html_url": "https://github.com/Gabriel439",
     "followers_url": "https://api.github.com/users/Gabriel439/followers",
     "following_url": "https://api.github.com/users/Gabriel439/following{/other_user}",
     "gists_url": "https://api.github.com/users/Gabriel439/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Gabriel439/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Gabriel439/subscriptions",
     "organizations_url": "https://api.github.com/users/Gabriel439/orgs",
     "repos_url": "https://api.github.com/users/Gabriel439/repos",
     "events_url": "https://api.github.com/users/Gabriel439/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Gabriel439/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/3/2016",
    "updated_at": "2016-12-03T22:34:16Z",
    "author_association": "NONE",
    "body": "Alright, so the final formal descriptions will be:\r\n\r\n# Session 1 - Applied category theory and abstract algebra (60 minutes)\r\n\r\nThe Haskell programming language resembles \"executable math\" and this mathematical connection challenges us to rethink how we organize our code.  We can tackle software complexity by reusing **standard interfaces** that originate in the fields of category theory and abstract algebra.  These interfaces improve code reuse for end-users, and also simplify correctness proofs for library authors.\r\n\r\nYou should attend this session if you've ever pondered questions such as:\r\n\r\n* \"What is the point of category theory?\"\r\n* \"Can correctness proofs scale to larger software projects?\"\r\n* \"What is the connection between math and programming?\"\r\n\r\nThis session assumes basic Haskell programming literacy (specifically familiarity with type classes) but does not assume a mathematical background so you don't have to know any category theory.  I will use Haskell code to motivate and explain all concepts.  All examples will be real code that compiles and there won't be any mathematical notation, category theory diagrams, or pseudo-code.\r\n\r\nBy the end of this session you should understand how to better apply these standard mathematical interfaces in your own code and also understand basic techniques for scaling correctness proofs.\r\n \r\n# Session 2 - Data science APIs in Haskell (60 minutes)\r\n\r\nData science is one programming area where Haskell's data-driven approach should be a natural fit but hasn't quite taken off just yet.  However, the language has recently made several leaps and bounds in this area and most of the lower-level machinery is there, although perhaps not as slick as their counterparts in more mature languages.\r\n\r\nThis session surveys the existing ecosystem of libraries and tools in order to offer some suggestions for how we might be able to improve upon the user experience.  This builds upon my first \"Applied category theory and abstract algebra\" session by taking inspiration from mathematics to design user-friendly interfaces.  However, the other session is not necessarily a prerequisite and familiarity with Haskell's [Typeclassopedia](https://wiki.haskell.org/Typeclassopedia) would also suffice to follow along.\r\n\r\nYou should attend this session if you are interested in using Haskell for data science or you are interested in authoring a library or tool of your own.  By the end of this session, you should be better equipped to use Haskell for small-scale data science (but not necessarily big data).\r\n\r\ncc: @jdegoes "
   },
   {
    "url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/comments/264694266",
    "html_url": "https://github.com/lambdaconf/winter-retreat-2017/issues/7#issuecomment-264694266",
    "issue_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7",
    "id": 264694266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5NDI2Ng==",
    "user": {
     "login": "alexi21",
     "id": 17229174,
     "node_id": "MDQ6VXNlcjE3MjI5MTc0",
     "avatar_url": "https://avatars0.githubusercontent.com/u/17229174?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/alexi21",
     "html_url": "https://github.com/alexi21",
     "followers_url": "https://api.github.com/users/alexi21/followers",
     "following_url": "https://api.github.com/users/alexi21/following{/other_user}",
     "gists_url": "https://api.github.com/users/alexi21/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/alexi21/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/alexi21/subscriptions",
     "organizations_url": "https://api.github.com/users/alexi21/orgs",
     "repos_url": "https://api.github.com/users/alexi21/repos",
     "events_url": "https://api.github.com/users/alexi21/events{/privacy}",
     "received_events_url": "https://api.github.com/users/alexi21/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "12/4/2016",
    "updated_at": "2016-12-04T09:52:56Z",
    "author_association": "NONE",
    "body": " Sounds great, looking forward to it"
   }
  ],
  "comments_url": "https://api.github.com/repos/lambdaconf/winter-retreat-2017/issues/7/comments",
  "milestone": null,
  "quicklink": "lambdaconf/winter-retreat-2017#7"
 }
]